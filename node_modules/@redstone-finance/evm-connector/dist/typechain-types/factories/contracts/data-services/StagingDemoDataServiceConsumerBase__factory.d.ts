import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { StagingDemoDataServiceConsumerBase, StagingDemoDataServiceConsumerBaseInterface } from "../../../contracts/data-services/StagingDemoDataServiceConsumerBase";
type StagingDemoDataServiceConsumerBaseConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class StagingDemoDataServiceConsumerBase__factory extends ContractFactory {
    constructor(...args: StagingDemoDataServiceConsumerBaseConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<StagingDemoDataServiceConsumerBase>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): StagingDemoDataServiceConsumerBase;
    connect(signer: Signer): StagingDemoDataServiceConsumerBase__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610b35806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063c274583a11610050578063c274583a146100ca578063f50b2efe14610109578063f90c49241461011e57600080fd5b80633ce142f51461007757806355a547d5146100a1578063b24ebfcc146100b7575b600080fd5b61008a61008536600461080f565b610125565b60405160ff90911681526020015b60405180910390f35b6100a9610221565b604051908152602001610098565b6100a96100c5366004610874565b61037a565b604080518082018252601881527f72656473746f6e652d65787465726e616c2d64656d6f2d310000000000000000602082015290516100989190610950565b61011c6101173660046109bc565b61038b565b005b600161008a565b600073ffffffffffffffffffffffffffffffffffffffff8216738e959cba422cc14aae2b1d36970293e955a05fa80361016057506000919050565b73ffffffffffffffffffffffffffffffffffffffff8216731f9d87e3ae042b2a3311d72ec6f44a89b24ceed80361019957506001919050565b73ffffffffffffffffffffffffffffffffffffffff8216734564a9fdb414c320c74c908f60c204e486ec1e2a036101d257506002919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b60008061022c610397565b90506000610239826104cc565b925061ffff169050600081900361027c576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561037457600061029284610534565b90506000806102a2606887610a04565b905060006102b08236610a17565b9050803592508265ffffffffffff166000036102f8576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87600003610310578265ffffffffffff169750610351565b878365ffffffffffff1614610351576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61035b8488610a04565b965050505050808061036c90610a2a565b91505061027f565b50505090565b600061038582610570565b92915050565b6103948161057b565b50565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0360135811614806103ff576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000366029111561043c576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610475600362ffffff8516610a04565b61047f9190610a04565b90503661048d600283610a04565b11156104c5576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080806104db602085610a04565b905036811115610517576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b368190033592508261052a600286610a04565b9250925050915091565b600080600061054284610631565b9092509050604e610554826020610a04565b61055e9084610a62565b6105689190610a04565b949350505050565b600061038582610684565b60006105896103e883610aa8565b9050804210156105e457603c61059f4283610a17565b11156105e0576040517fb6b0916d00000000000000000000000000000000000000000000000000000000815260048101829052426024820152604401610218565b5050565b60b46105f08242610a17565b11156105e0576040517f0321d0b500000000000000000000000000000000000000000000000000000000815260048101829052426024820152604401610218565b6000808080806020610644604188610a04565b61064e9190610a04565b6106589036610a17565b803593509050610669600382610a17565b62ffffff9390931696923563ffffffff169550919350505050565b600081516002036106db576002826001815181106106a4576106a4610abc565b6020026020010151836000815181106106bf576106bf610abc565b60200260200101516106d19190610a04565b6103859190610aa8565b8151600003610716576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61071f826107c1565b60006002835161072f9190610aa8565b90506002835161073f9190610aeb565b60000361079f57600083828151811061075a5761075a610abc565b6020026020010151846001846107709190610a17565b8151811061078057610780610abc565b60200260200101516107929190610a04565b9050610568600282610aa8565b8281815181106107b1576107b1610abc565b6020026020010151915050919050565b8051602082016020820281019150805b8281101561080957815b818110156108005781518151808210156107f6578084528183525b50506020016107db565b506020016107d1565b50505050565b60006020828403121561082157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146104c557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602080838503121561088757600080fd5b823567ffffffffffffffff8082111561089f57600080fd5b818501915085601f8301126108b357600080fd5b8135818111156108c5576108c5610845565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561090857610908610845565b60405291825284820192508381018501918883111561092657600080fd5b938501935b828510156109445784358452938501939285019261092b565b98975050505050505050565b600060208083528351808285015260005b8181101561097d57858101830151858201604001528201610961565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000602082840312156109ce57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610385576103856109d5565b81810381811115610385576103856109d5565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a5b57610a5b6109d5565b5060010190565b8082028115828204841417610385576103856109d5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610ab757610ab7610a79565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082610afa57610afa610a79565b50069056fea2646970667358221220541e654fbade7c43bd0c9000f854006e9a845daafcd9e51f2ef11953b0b206d064736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CalldataMustHaveValidPayload";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CalldataOverOrUnderFlow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CanNotPickMedianOfEmptyArray";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampMustNotBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampsMustBeEqual";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataTimestampCannotBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EachSignerMustProvideTheSameValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EmptyCalldataPointersArr";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "GetDataServiceIdNotImplemented";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncorrectUnsignedMetadataSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedSignersCount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "requiredSignersCount";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientNumberOfUniqueSigners";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCalldataPointer";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "RedstonePayloadMustHaveAtLeastOneDataPackage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receivedSigner";
            readonly type: "address";
        }];
        readonly name: "SignerNotAuthorised";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedTimestampSeconds";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "blockTimestamp";
            readonly type: "uint256";
        }];
        readonly name: "TimestampFromTooLongFuture";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedTimestampSeconds";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "blockTimestamp";
            readonly type: "uint256";
        }];
        readonly name: "TimestampIsTooOld";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TimestampsMustBeEqual";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "valueByteSize";
            readonly type: "uint256";
        }];
        readonly name: "TooLargeValueByteSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "values";
            readonly type: "uint256[]";
        }];
        readonly name: "aggregateValues";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "extractTimestampsAndAssertAllAreEqual";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "extractedTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDataServiceId";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getUniqueSignersThreshold";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedTimestampMilliseconds";
            readonly type: "uint256";
        }];
        readonly name: "validateTimestamp";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): StagingDemoDataServiceConsumerBaseInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): StagingDemoDataServiceConsumerBase;
}
export {};
//# sourceMappingURL=StagingDemoDataServiceConsumerBase__factory.d.ts.map