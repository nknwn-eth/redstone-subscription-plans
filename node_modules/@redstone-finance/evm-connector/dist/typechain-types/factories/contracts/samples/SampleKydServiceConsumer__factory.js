"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SampleKydServiceConsumer__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "AllValuesMustBeEqual",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampMustNotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [],
        name: "DataTimestampCannotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "GetDataServiceIdNotImplemented",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "signedHash",
                type: "bytes32",
            },
        ],
        name: "InvalidSignature",
        type: "error",
    },
    {
        inputs: [],
        name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampFromTooLongFuture",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampIsTooOld",
        type: "error",
    },
    {
        inputs: [],
        name: "TimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "valueByteSize",
                type: "uint256",
            },
        ],
        name: "TooLargeValueByteSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "UserDidNotPassKYD",
        type: "error",
    },
    {
        inputs: [],
        name: "ValuesArrayCanNotBeEmpty",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "aggregateValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "executeActionPassingKYD",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "extractTimestampsAndAssertAllAreEqual",
        outputs: [
            {
                internalType: "uint256",
                name: "extractedTimestamp",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDataServiceId",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getPassedKYDValue",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUniqueSignersThreshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "validateTimestamp",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506113b7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c274583a1161005b578063c274583a146100ea578063ec359c4d14610129578063f50b2efe1461013f578063f90c49241461015257600080fd5b80633ce142f51461008d57806355a547d5146100b757806371478b24146100cd578063b24ebfcc146100d7575b600080fd5b6100a061009b3660046110ad565b610159565b60405160ff90911681526020015b60405180910390f35b6100bf61021c565b6040519081526020016100ae565b6100d5610375565b005b6100bf6100e5366004611112565b610439565b604080518082018252601981527f72656473746f6e652d637573746f6d2d75726c732d64656d6f00000000000000602082015290516100ae91906111ee565b60005460ff1660405190151581526020016100ae565b6100d561014d36600461125a565b610510565b60026100a0565b600073ffffffffffffffffffffffffffffffffffffffff82167370997970c51812dc3a010c7d01b50e0d17dc79c80361019457506000919050565b73ffffffffffffffffffffffffffffffffffffffff8216733c44cdddb6a900fa2b585dd299e03d12fa4293bc036101cd57506001919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b60008061022761051c565b9050600061023482610651565b925061ffff1690506000819003610277576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561036f57600061028d846106b9565b905060008061029d6068876112a2565b905060006102ab82366112b5565b9050803592508265ffffffffffff166000036102f3576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760000361030b578265ffffffffffff16975061034c565b878365ffffffffffff161461034c576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61035684886112a2565b9650505050508080610367906112c8565b91505061027a565b50505090565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b16602082015260009060340160405160208183030381529060405280519060200120905060006103cc826106f5565b90508060011461040a576040517fdb1e860d000000000000000000000000000000000000000000000000000000008152336004820152602401610213565b5050600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60008151600003610476576040517fdfac221e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260008151811061048b5761048b611300565b602002602001015190506000600190505b835181101561050957818482815181106104b8576104b8611300565b6020026020010151146104f7576040517fd5e55d1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80610501816112c8565b91505061049c565b5092915050565b61051981610765565b50565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610584576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600036602911156105c1576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd7360135600060096105fa600362ffffff85166112a2565b61060491906112a2565b9050366106126002836112a2565b111561064a576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080806106606020856112a2565b90503681111561069c576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36819003359250826106af6002866112a2565b9250925050915091565b60008060006106c78461081b565b9092509050604e6106d98260206112a2565b6106e3908461132f565b6106ed91906112a2565b949350505050565b60408051600180825281830190925260009182919060208083019080368337019050509050828160008151811061072e5761072e611300565b6020026020010181815250506107438161086e565b60008151811061075557610755611300565b6020026020010151915050919050565b60006107736103e883611346565b9050804210156107ce57603c61078942836112b5565b11156107ca576040517fb6b0916d00000000000000000000000000000000000000000000000000000000815260048101829052426024820152604401610213565b5050565b60b46107da82426112b5565b11156107ca576040517f0321d0b500000000000000000000000000000000000000000000000000000000815260048101829052426024820152604401610213565b600080808080602061082e6041886112a2565b61083891906112a2565b61084290366112b5565b8035935090506108536003826112b5565b62ffffff9390931696923563ffffffff169550919350505050565b606060008061087c84610889565b9150915061050981610510565b6060600080835167ffffffffffffffff8111156108a8576108a86110e3565b6040519080825280602002602001820160405280156108d1578160200160208202803683370190505b5090506000845167ffffffffffffffff8111156108f0576108f06110e3565b604051908082528060200260200182016040528015610919578160200160208202803683370190505b5090506000855167ffffffffffffffff811115610938576109386110e3565b60405190808252806020026020018201604052801561096b57816020015b60608152602001906001900390816109565790505b509050600260005b87518110156109e4578167ffffffffffffffff811115610995576109956110e3565b6040519080825280602002602001820160405280156109be578160200160208202803683370190505b508382815181106109d1576109d1611300565b6020908102919091010152600101610973565b5060006109ef61051c565b905060006109fc82610651565b60405190935061ffff909116915060005b82811015610abd576000610a248c8a8a8a89610ad6565b90955090506000819003610a64576040517fdfb25a7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b898114610aad5789600003610a7b57809950610aad565b6040517f4cbc474200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060208201604052600101610a0d565b50610ac88588610d7f565b985050505050505050915091565b6000806000806000610ae78661081b565b909250905060008060608180600d610b006020886112a2565b610b0a908961132f565b610b1491906112a2565b91506000610b2360688d6112a2565b610b2d90366112b5565b9050600083610b3d60418f6112a2565b610b4791906112a2565b610b5190366112b5565b9050610b5d8482610b70565b9450836020860120955081359250610bb2565b604080518381526020818501810190925260009101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b8265ffffffffffff169a50610bd38660418f610bce91906112a2565b610ea9565b9650610bde87610159565b60ff16995050505050505050604e86610bf791906112a2565b955060008060005b84811015610d6c576020610c13858b6112a2565b610c1d91906112a2565b9850610c298985611041565b909350915060005b8d51811015610d63578d8181518110610c4c57610c4c611300565b60200260200101518403610d5b5760008c8281518110610c6e57610c6e611300565b60200260200101519050610c8781896001901b16151590565b158015610cb05750600260ff168e8381518110610ca657610ca6611300565b6020026020010151105b15610d5557838c8381518110610cc857610cc8611300565b60200260200101518f8481518110610ce257610ce2611300565b602002602001015181518110610cfa57610cfa611300565b6020026020010181815250508d8281518110610d1857610d18611300565b602002602001018051809190610d2d906112c8565b9052506001881b81178d8381518110610d4857610d48611300565b6020026020010181815250505b50610d63565b600101610c31565b50600101610bff565b5050508594505050509550959350505050565b60606000835167ffffffffffffffff811115610d9d57610d9d6110e3565b604051908082528060200260200182016040528015610dc6578160200160208202803683370190505b509050600260005b8551811015610e9d5781858281518110610dea57610dea611300565b60200260200101511015610e5057848181518110610e0a57610e0a611300565b6020026020010151826040517f2b13aef5000000000000000000000000000000000000000000000000000000008152600401610213929190918252602082015260400190565b6000610e74878381518110610e6757610e67611300565b6020026020010151610439565b905080848381518110610e8957610e89611300565b602090810291909101015250600101610dce565b50909150505b92915050565b60003682900380359060208101359060400135831a601b8114801590610ed3575060ff8116601c14155b15610f0d576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610213565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610f6a576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610213565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610fbd573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015194505073ffffffffffffffffffffffffffffffffffffffff8416611038576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610213565b50505092915050565b6000808061104f85366112b5565b9050803592506020810135915060218410611099576040517fc000fc4200000000000000000000000000000000000000000000000000000000815260048101859052602401610213565b8360200360080282901c9150509250929050565b6000602082840312156110bf57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461064a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602080838503121561112557600080fd5b823567ffffffffffffffff8082111561113d57600080fd5b818501915085601f83011261115157600080fd5b813581811115611163576111636110e3565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156111a6576111a66110e3565b6040529182528482019250838101850191888311156111c457600080fd5b938501935b828510156111e2578435845293850193928501926111c9565b98975050505050505050565b600060208083528351808285015260005b8181101561121b578581018301518582016040015282016111ff565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561126c57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610ea357610ea3611273565b81810381811115610ea357610ea3611273565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112f9576112f9611273565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8082028115828204841417610ea357610ea3611273565b60008261137c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122081b456f7d3d060ff950f0ffaedb6ee1bbd670d0857ea551918b1793165b2e94164736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class SampleKydServiceConsumer__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SampleKydServiceConsumer__factory = SampleKydServiceConsumer__factory;
//# sourceMappingURL=SampleKydServiceConsumer__factory.js.map