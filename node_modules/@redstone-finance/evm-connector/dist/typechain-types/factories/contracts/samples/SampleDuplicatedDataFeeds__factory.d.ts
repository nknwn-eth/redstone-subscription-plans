import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { SampleDuplicatedDataFeeds, SampleDuplicatedDataFeedsInterface } from "../../../contracts/samples/SampleDuplicatedDataFeeds";
type SampleDuplicatedDataFeedsConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SampleDuplicatedDataFeeds__factory extends ContractFactory {
    constructor(...args: SampleDuplicatedDataFeedsConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SampleDuplicatedDataFeeds>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SampleDuplicatedDataFeeds;
    connect(signer: Signer): SampleDuplicatedDataFeeds__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50611c00806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063b24ebfcc11610081578063d22158fa1161005b578063d22158fa14610186578063f50b2efe14610199578063f90c4924146101ac57600080fd5b8063b24ebfcc14610149578063c22b59281461015c578063c274583a1461017157600080fd5b806353432eb4116100b257806353432eb41461010b57806355a547d51461012057806395262d9f1461013657600080fd5b80633ce142f5146100ce578063429989f0146100f8575b600080fd5b6100e16100dc366004611821565b6101b3565b60405160ff90911681526020015b60405180910390f35b6100e1610106366004611821565b6101c4565b61011e610119366004611857565b610689565b005b6101286106e3565b6040519081526020016100ef565b6100e1610144366004611821565b61083c565b6101286101573660046118fb565b610847565b610164610852565b6040516100ef91906119d7565b6101796108aa565b6040516100ef9190611a1b565b6100e1610194366004611821565b6108de565b61011e6101a7366004611a87565b610964565b600a6100e1565b60006101be8261083c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff821673f39fd6e51aad88f6f4ce6ab8827279cfffb92266036101ff57506000919050565b73ffffffffffffffffffffffffffffffffffffffff82167370997970c51812dc3a010c7d01b50e0d17dc79c80361023857506001919050565b73ffffffffffffffffffffffffffffffffffffffff8216733c44cdddb6a900fa2b585dd299e03d12fa4293bc0361027157506002919050565b73ffffffffffffffffffffffffffffffffffffffff82167390f79bf6eb2c4f870365e785982e1f101e93b906036102aa57506003919050565b73ffffffffffffffffffffffffffffffffffffffff82167315d34aaf54267db7d7c367839aaf71a00a2c6a65036102e357506004919050565b73ffffffffffffffffffffffffffffffffffffffff8216739965507d1a55bcc2695c58ba16fb37d819b0a4dc0361031c57506005919050565b73ffffffffffffffffffffffffffffffffffffffff821673976ea74026e726554db657fa54763abd0c3a0aa90361035557506006919050565b73ffffffffffffffffffffffffffffffffffffffff82167314dc79964da2c08b23698b3d3cc7ca32193d99550361038e57506007919050565b73ffffffffffffffffffffffffffffffffffffffff82167323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f036103c757506008919050565b73ffffffffffffffffffffffffffffffffffffffff821673a0ee7a142d267c1f36714e4a8f75612f20a797200361040057506009919050565b73ffffffffffffffffffffffffffffffffffffffff821673bcd4042de499d14e55001ccbb24a551f3b954096036104395750600a919050565b73ffffffffffffffffffffffffffffffffffffffff82167371be63f3384f5fb98995898a86b02fb2426c5788036104725750600b919050565b73ffffffffffffffffffffffffffffffffffffffff821673fabb0ac9d68b0b445fb7357272ff202c5651694a036104ab5750600c919050565b73ffffffffffffffffffffffffffffffffffffffff8216731cbd3b2770909d4e10f157cabc84c7264073c9ec036104e45750600d919050565b73ffffffffffffffffffffffffffffffffffffffff821673df3e18d64bc6a983f673ab319ccae4f1a57c70970361051d5750600e919050565b73ffffffffffffffffffffffffffffffffffffffff821673cd3b766ccdd6ae721141f452c550ca635964ce71036105565750600f919050565b73ffffffffffffffffffffffffffffffffffffffff8216732546bcd3c84621e976d8185a91a922ae77ecec300361058f57506010919050565b73ffffffffffffffffffffffffffffffffffffffff821673bda5747bfd65f08deb54cb465eb87d40e51b197e036105c857506011919050565b73ffffffffffffffffffffffffffffffffffffffff821673dd2fd4581271e230360230f9337d5c0430bf44c00361060157506012919050565b73ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c11990361063a57506013919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b60006106c78383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109a792505050565b80519091506106dd9060009060208401906117c1565b50505050565b6000806106ee610be3565b905060006106fb82610d18565b925061ffff169050600081900361073e576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561083657600061075484610d80565b9050600080610764606887611acf565b905060006107728236611ae2565b9050803592508265ffffffffffff166000036107ba576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876000036107d2578265ffffffffffff169750610813565b878365ffffffffffff1614610813576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61081d8488611acf565b965050505050808061082e90611af5565b915050610741565b50505090565b60006101be826108de565b60006101be82610dbc565b606060008054806020026020016040519081016040528092919081815260200182805480156108a057602002820191906000526020600020905b81548152602001906001019080831161088c575b5050505050905090565b60606040517f608b530700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c11990361095b576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610680565b6101be826101c4565b6501812f2590c08110156109a4576040517f355b874300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60606000825167ffffffffffffffff8111156109c5576109c56118cc565b6040519080825280602002602001820160405280156109ee578160200160208202803683370190505b509050600080805b8551811015610abf576000925060005b82811015610a6257868281518110610a2057610a20611b2d565b6020026020010151858281518110610a3a57610a3a611b2d565b602002602001015103610a505760019350610a62565b80610a5a81611af5565b915050610a06565b5082610aad57858181518110610a7a57610a7a611b2d565b6020026020010151848381518110610a9457610a94611b2d565b602090810291909101015281610aa981611af5565b9250505b80610ab781611af5565b9150506109f6565b50808352600080610acf85610dc7565b91509150610adc81610964565b6000875167ffffffffffffffff811115610af857610af86118cc565b604051908082528060200260200182016040528015610b21578160200160208202803683370190505b50905060005b8851811015610bd75760005b8751811015610bc457878181518110610b4e57610b4e611b2d565b60200260200101518a8381518110610b6857610b68611b2d565b602002602001015103610bb257848181518110610b8757610b87611b2d565b6020026020010151838381518110610ba157610ba1611b2d565b602002602001018181525050610bc4565b80610bbc81611af5565b915050610b33565b5080610bcf81611af5565b915050610b27565b50979650505050505050565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610c4b576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610c88576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610cc1600362ffffff8516611acf565b610ccb9190611acf565b905036610cd9600283611acf565b1115610d11576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b60008080610d27602085611acf565b905036811115610d63576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3681900335925082610d76600286611acf565b9250925050915091565b6000806000610d8e84611014565b9092509050604e610da0826020611acf565b610daa9084611b5c565b610db49190611acf565b949350505050565b60006101be82611067565b6060600080835167ffffffffffffffff811115610de657610de66118cc565b604051908082528060200260200182016040528015610e0f578160200160208202803683370190505b5090506000845167ffffffffffffffff811115610e2e57610e2e6118cc565b604051908082528060200260200182016040528015610e57578160200160208202803683370190505b5090506000855167ffffffffffffffff811115610e7657610e766118cc565b604051908082528060200260200182016040528015610ea957816020015b6060815260200190600190039081610e945790505b509050600a60005b8751811015610f22578167ffffffffffffffff811115610ed357610ed36118cc565b604051908082528060200260200182016040528015610efc578160200160208202803683370190505b50838281518110610f0f57610f0f611b2d565b6020908102919091010152600101610eb1565b506000610f2d610be3565b90506000610f3a82610d18565b60405190935061ffff909116915060005b82811015610ffb576000610f628c8a8a8a896111a4565b90955090506000819003610fa2576040517fdfb25a7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b898114610feb5789600003610fb957809950610feb565b6040517f4cbc474200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060208201604052600101610f4b565b50611006858861144d565b985050505050505050915091565b6000808080806020611027604188611acf565b6110319190611acf565b61103b9036611ae2565b80359350905061104c600382611ae2565b62ffffff9390931696923563ffffffff169550919350505050565b600081516002036110be5760028260018151811061108757611087611b2d565b6020026020010151836000815181106110a2576110a2611b2d565b60200260200101516110b49190611acf565b6101be9190611ba2565b81516000036110f9576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61110282611575565b6000600283516111129190611ba2565b9050600283516111229190611bb6565b60000361118257600083828151811061113d5761113d611b2d565b6020026020010151846001846111539190611ae2565b8151811061116357611163611b2d565b60200260200101516111759190611acf565b9050610db4600282611ba2565b82818151811061119457611194611b2d565b6020026020010151915050919050565b60008060008060006111b586611014565b909250905060008060608180600d6111ce602088611acf565b6111d89089611b5c565b6111e29190611acf565b915060006111f160688d611acf565b6111fb9036611ae2565b905060008361120b60418f611acf565b6112159190611acf565b61121f9036611ae2565b905061122b848261123e565b9450836020860120955081359250611280565b604080518381526020818501810190925260009101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b8265ffffffffffff169a506112a18660418f61129c9190611acf565b6115bd565b96506112ac876101b3565b60ff16995050505050505050604e866112c59190611acf565b955060008060005b8481101561143a5760206112e1858b611acf565b6112eb9190611acf565b98506112f78985611755565b909350915060005b8d51811015611431578d818151811061131a5761131a611b2d565b602002602001015184036114295760008c828151811061133c5761133c611b2d565b6020026020010151905061135581896001901b16151590565b15801561137e5750600a60ff168e838151811061137457611374611b2d565b6020026020010151105b1561142357838c838151811061139657611396611b2d565b60200260200101518f84815181106113b0576113b0611b2d565b6020026020010151815181106113c8576113c8611b2d565b6020026020010181815250508d82815181106113e6576113e6611b2d565b6020026020010180518091906113fb90611af5565b9052506001881b81178d838151811061141657611416611b2d565b6020026020010181815250505b50611431565b6001016112ff565b506001016112cd565b5050508594505050509550959350505050565b60606000835167ffffffffffffffff81111561146b5761146b6118cc565b604051908082528060200260200182016040528015611494578160200160208202803683370190505b509050600a60005b855181101561156b57818582815181106114b8576114b8611b2d565b6020026020010151101561151e578481815181106114d8576114d8611b2d565b6020026020010151826040517f2b13aef5000000000000000000000000000000000000000000000000000000008152600401610680929190918252602082015260400190565b600061154287838151811061153557611535611b2d565b6020026020010151610847565b90508084838151811061155757611557611b2d565b60209081029190910101525060010161149c565b5090949350505050565b8051602082016020820281019150805b828110156106dd57815b818110156115b45781518151808210156115aa578084528183525b505060200161158f565b50602001611585565b60003682900380359060208101359060400135831a601b81148015906115e7575060ff8116601c14155b15611621576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610680565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082111561167e576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610680565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa1580156116d1573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015194505073ffffffffffffffffffffffffffffffffffffffff841661174c576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610680565b50505092915050565b600080806117638536611ae2565b90508035925060208101359150602184106117ad576040517fc000fc4200000000000000000000000000000000000000000000000000000000815260048101859052602401610680565b8360200360080282901c9150509250929050565b8280548282559060005260206000209081019282156117fc579160200282015b828111156117fc5782518255916020019190600101906117e1565b5061180892915061180c565b5090565b5b80821115611808576000815560010161180d565b60006020828403121561183357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610d1157600080fd5b6000806020838503121561186a57600080fd5b823567ffffffffffffffff8082111561188257600080fd5b818501915085601f83011261189657600080fd5b8135818111156118a557600080fd5b8660208260051b85010111156118ba57600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602080838503121561190e57600080fd5b823567ffffffffffffffff8082111561192657600080fd5b818501915085601f83011261193a57600080fd5b81358181111561194c5761194c6118cc565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561198f5761198f6118cc565b6040529182528482019250838101850191888311156119ad57600080fd5b938501935b828510156119cb578435845293850193928501926119b2565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611a0f578351835292840192918401916001016119f3565b50909695505050505050565b600060208083528351808285015260005b81811015611a4857858101830151858201604001528201611a2c565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600060208284031215611a9957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156101be576101be611aa0565b818103818111156101be576101be611aa0565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b2657611b26611aa0565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80820281158282048414176101be576101be611aa0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611bb157611bb1611b73565b500490565b600082611bc557611bc5611b73565b50069056fea2646970667358221220ac753171551e3bdbf333bfd8a11e989e560be2d1381c1b2139bc80238d2a486e64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CalldataMustHaveValidPayload";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CalldataOverOrUnderFlow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CanNotPickMedianOfEmptyArray";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampMustNotBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampsMustBeEqual";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataTimestampCannotBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EachSignerMustProvideTheSameValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EmptyCalldataPointersArr";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "GetDataServiceIdNotImplemented";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncorrectUnsignedMetadataSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedSignersCount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "requiredSignersCount";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientNumberOfUniqueSigners";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCalldataPointer";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "signedHash";
            readonly type: "bytes32";
        }];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "RedstonePayloadMustHaveAtLeastOneDataPackage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receivedSigner";
            readonly type: "address";
        }];
        readonly name: "SignerNotAuthorised";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TimestampIsNotValid";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TimestampsMustBeEqual";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "valueByteSize";
            readonly type: "uint256";
        }];
        readonly name: "TooLargeValueByteSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "values";
            readonly type: "uint256[]";
        }];
        readonly name: "aggregateValues";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "extractTimestampsAndAssertAllAreEqual";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "extractedTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockExceptLastOneAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedMockSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDataServiceId";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getUniqueSignersThreshold";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getValuesFromStorage";
        readonly outputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "dataFeedIdsWithDuplicates";
            readonly type: "bytes32[]";
        }];
        readonly name: "saveOracleValuesInStorage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedTimestampMilliseconds";
            readonly type: "uint256";
        }];
        readonly name: "validateTimestamp";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): SampleDuplicatedDataFeedsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SampleDuplicatedDataFeeds;
}
export {};
//# sourceMappingURL=SampleDuplicatedDataFeeds__factory.d.ts.map