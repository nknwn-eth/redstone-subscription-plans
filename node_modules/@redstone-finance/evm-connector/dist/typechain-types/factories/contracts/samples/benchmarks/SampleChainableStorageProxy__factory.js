"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SampleChainableStorageProxy__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "CanNotPickMedianOfEmptyArray",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampMustNotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [],
        name: "DataTimestampCannotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "GetDataServiceIdNotImplemented",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "signedHash",
                type: "bytes32",
            },
        ],
        name: "InvalidSignature",
        type: "error",
    },
    {
        inputs: [],
        name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [],
        name: "TimestampIsNotValid",
        type: "error",
    },
    {
        inputs: [],
        name: "TimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "valueByteSize",
                type: "uint256",
            },
        ],
        name: "TooLargeValueByteSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "aggregateValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "extractTimestampsAndAssertAllAreEqual",
        outputs: [
            {
                internalType: "uint256",
                name: "extractedTimestamp",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAllMockAuthorised",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAllMockExceptLastOneAuthorised",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedMockSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDataServiceId",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "getOracleValue",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "getOracleValues",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUniqueSignersThreshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "oracleValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "processOracleValue",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "processOracleValues",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_sampleContract",
                type: "address",
            },
        ],
        name: "register",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "saveOracleValueInContractStorage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "saveOracleValuesInContractStorage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "newUniqueSignersThreshold",
                type: "uint8",
            },
        ],
        name: "updateUniqueSignersThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "validateTimestamp",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040526000805460ff60a01b1916600160a01b17905534801561002357600080fd5b50611d79806100336000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063a09f9c3a116100b2578063df2c65b311610081578063f5bcb8d611610066578063f5bcb8d614610319578063f90c492414610339578063fabdf8361461035c57600080fd5b8063df2c65b3146102f3578063f50b2efe1461030657600080fd5b8063a09f9c3a1461025e578063b24ebfcc146102b8578063c274583a146102cb578063d22158fa146102e057600080fd5b80634420e4861161010957806355a547d5116100ee57806355a547d51461022357806395262d9f1461022b5780639b606ed91461023e57600080fd5b80634420e486146101bb5780634db39f231461021057600080fd5b80632a5284a91461013b5780633ce142f51461016e5780633d60fee314610193578063429989f0146101a8575b600080fd5b61015b6101493660046119bf565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b61018161017c3660046119d8565b61036f565b60405160ff9091168152602001610165565b6101a66101a13660046119bf565b610380565b005b6101816101b63660046119d8565b61039b565b6101a66101c93660046119d8565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6101a661021e3660046119bf565b610860565b61015b6108f1565b6101816102393660046119d8565b610a4a565b61025161024c366004611ab0565b610a55565b6040516101659190611b46565b6101a661026c366004611b8a565b6000805460ff90921674010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b61015b6102c6366004611ab0565b610b0e565b6102d3610b19565b6040516101659190611bad565b6101816102ee3660046119d8565b610b4d565b6101a6610301366004611ab0565b610bd3565b6101a66103143660046119bf565b610c4e565b61015b6103273660046119bf565b60009081526001602052604090205490565b60005474010000000000000000000000000000000000000000900460ff16610181565b6101a661036a366004611ab0565b610c91565b600061037a82610a4a565b92915050565b61038981610cf0565b60009182526001602052604090912055565b600073ffffffffffffffffffffffffffffffffffffffff821673f39fd6e51aad88f6f4ce6ab8827279cfffb92266036103d657506000919050565b73ffffffffffffffffffffffffffffffffffffffff82167370997970c51812dc3a010c7d01b50e0d17dc79c80361040f57506001919050565b73ffffffffffffffffffffffffffffffffffffffff8216733c44cdddb6a900fa2b585dd299e03d12fa4293bc0361044857506002919050565b73ffffffffffffffffffffffffffffffffffffffff82167390f79bf6eb2c4f870365e785982e1f101e93b9060361048157506003919050565b73ffffffffffffffffffffffffffffffffffffffff82167315d34aaf54267db7d7c367839aaf71a00a2c6a65036104ba57506004919050565b73ffffffffffffffffffffffffffffffffffffffff8216739965507d1a55bcc2695c58ba16fb37d819b0a4dc036104f357506005919050565b73ffffffffffffffffffffffffffffffffffffffff821673976ea74026e726554db657fa54763abd0c3a0aa90361052c57506006919050565b73ffffffffffffffffffffffffffffffffffffffff82167314dc79964da2c08b23698b3d3cc7ca32193d99550361056557506007919050565b73ffffffffffffffffffffffffffffffffffffffff82167323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f0361059e57506008919050565b73ffffffffffffffffffffffffffffffffffffffff821673a0ee7a142d267c1f36714e4a8f75612f20a79720036105d757506009919050565b73ffffffffffffffffffffffffffffffffffffffff821673bcd4042de499d14e55001ccbb24a551f3b954096036106105750600a919050565b73ffffffffffffffffffffffffffffffffffffffff82167371be63f3384f5fb98995898a86b02fb2426c5788036106495750600b919050565b73ffffffffffffffffffffffffffffffffffffffff821673fabb0ac9d68b0b445fb7357272ff202c5651694a036106825750600c919050565b73ffffffffffffffffffffffffffffffffffffffff8216731cbd3b2770909d4e10f157cabc84c7264073c9ec036106bb5750600d919050565b73ffffffffffffffffffffffffffffffffffffffff821673df3e18d64bc6a983f673ab319ccae4f1a57c7097036106f45750600e919050565b73ffffffffffffffffffffffffffffffffffffffff821673cd3b766ccdd6ae721141f452c550ca635964ce710361072d5750600f919050565b73ffffffffffffffffffffffffffffffffffffffff8216732546bcd3c84621e976d8185a91a922ae77ecec300361076657506010919050565b73ffffffffffffffffffffffffffffffffffffffff821673bda5747bfd65f08deb54cb465eb87d40e51b197e0361079f57506011919050565b73ffffffffffffffffffffffffffffffffffffffff821673dd2fd4581271e230360230f9337d5c0430bf44c0036107d857506012919050565b73ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c11990361081157506013919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b61086981610380565b6000546040517f4db39f230000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690634db39f23906024015b600060405180830381600087803b1580156108d657600080fd5b505af11580156108ea573d6000803e3d6000fd5b5050505050565b6000806108fc610d60565b9050600061090982610e95565b925061ffff169050600081900361094c576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610a4457600061096284610efd565b9050600080610972606887611c48565b905060006109808236611c5b565b9050803592508265ffffffffffff166000036109c8576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876000036109e0578265ffffffffffff169750610a21565b878365ffffffffffff1614610a21576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a2b8488611c48565b9650505050508080610a3c90611c6e565b91505061094f565b50505090565b600061037a82610b4d565b60606000825167ffffffffffffffff811115610a7357610a73611a0e565b604051908082528060200260200182016040528015610a9c578160200160208202803683370190505b50905060005b8351811015610b075760016000858381518110610ac157610ac1611ca6565b6020026020010151815260200190815260200160002054828281518110610aea57610aea611ca6565b602090810291909101015280610aff81611c6e565b915050610aa2565b5092915050565b600061037a82610f39565b60606040517f608b530700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c119903610bca576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610857565b61037a8261039b565b6000610bde82610f44565b905060005b8251811015610c4957818181518110610bfe57610bfe611ca6565b602002602001015160016000858481518110610c1c57610c1c611ca6565b60200260200101518152602001908152602001600020819055508080610c4190611c6e565b915050610be3565b505050565b6501812f2590c0811015610c8e576040517f355b874300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b610c9a81610bd3565b6000546040517ffabdf83600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063fabdf836906108bc908490600401611b46565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110610d2957610d29611ca6565b602002602001018181525050610d3e81610f44565b600081518110610d5057610d50611ca6565b6020026020010151915050919050565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610dc8576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610e05576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610e3e600362ffffff8516611c48565b610e489190611c48565b905036610e56600283611c48565b1115610e8e576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b60008080610ea4602085611c48565b905036811115610ee0576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3681900335925082610ef3600286611c48565b9250925050915091565b6000806000610f0b84610f5f565b9092509050604e610f1d826020611c48565b610f279084611cd5565b610f319190611c48565b949350505050565b600061037a82610fb2565b6060600080610f52846110df565b91509150610b0781610c4e565b6000808080806020610f72604188611c48565b610f7c9190611c48565b610f869036611c5b565b803593509050610f97600382611c5b565b62ffffff9390931696923563ffffffff169550919350505050565b6000815160020361100957600282600181518110610fd257610fd2611ca6565b602002602001015183600081518110610fed57610fed611ca6565b6020026020010151610fff9190611c48565b61037a9190611d1b565b8151600003611044576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61104d82611356565b60006002835161105d9190611d1b565b90506002835161106d9190611d2f565b6000036110cd57600083828151811061108857611088611ca6565b60200260200101518460018461109e9190611c5b565b815181106110ae576110ae611ca6565b60200260200101516110c09190611c48565b9050610f31600282611d1b565b828181518110610d5057610d50611ca6565b6060600080835167ffffffffffffffff8111156110fe576110fe611a0e565b604051908082528060200260200182016040528015611127578160200160208202803683370190505b5090506000845167ffffffffffffffff81111561114657611146611a0e565b60405190808252806020026020018201604052801561116f578160200160208202803683370190505b5090506000855167ffffffffffffffff81111561118e5761118e611a0e565b6040519080825280602002602001820160405280156111c157816020015b60608152602001906001900390816111ac5790505b50905060006111eb60005460ff740100000000000000000000000000000000000000009091041690565b60ff16905060005b8751811015611264578167ffffffffffffffff81111561121557611215611a0e565b60405190808252806020026020018201604052801561123e578160200160208202803683370190505b5083828151811061125157611251611ca6565b60209081029190910101526001016111f3565b50600061126f610d60565b9050600061127c82610e95565b60405190935061ffff909116915060005b8281101561133d5760006112a48c8a8a8a896113a4565b909550905060008190036112e4576040517fdfb25a7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89811461132d57896000036112fb5780995061132d565b6040517f4cbc474200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506020820160405260010161128d565b506113488588611669565b985050505050505050915091565b8051602082016020820281019150805b8281101561139e57815b8181101561139557815181518082101561138b578084528183525b5050602001611370565b50602001611366565b50505050565b60008060008060006113b586610f5f565b909250905060008060608180600d6113ce602088611c48565b6113d89089611cd5565b6113e29190611c48565b915060006113f160688d611c48565b6113fb9036611c5b565b905060008361140b60418f611c48565b6114159190611c48565b61141f9036611c5b565b905061142b848261143e565b9450836020860120955081359250611480565b604080518381526020818501810190925260009101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b8265ffffffffffff169a506114a18660418f61149c9190611c48565b6117bb565b96506114ac8761036f565b60ff16995050505050505050604e866114c59190611c48565b955060008060005b848110156116565760206114e1858b611c48565b6114eb9190611c48565b98506114f78985611953565b909350915060005b8d5181101561164d578d818151811061151a5761151a611ca6565b602002602001015184036116455760008c828151811061153c5761153c611ca6565b6020026020010151905061155581896001901b16151590565b15801561159a575060005474010000000000000000000000000000000000000000900460ff1660ff168e838151811061159057611590611ca6565b6020026020010151105b1561163f57838c83815181106115b2576115b2611ca6565b60200260200101518f84815181106115cc576115cc611ca6565b6020026020010151815181106115e4576115e4611ca6565b6020026020010181815250508d828151811061160257611602611ca6565b60200260200101805180919061161790611c6e565b9052506001881b81178d838151811061163257611632611ca6565b6020026020010181815250505b5061164d565b6001016114ff565b506001016114cd565b5050508594505050509550959350505050565b60606000835167ffffffffffffffff81111561168757611687611a0e565b6040519080825280602002602001820160405280156116b0578160200160208202803683370190505b50905060006116da60005460ff740100000000000000000000000000000000000000009091041690565b60ff16905060005b85518110156117b157818582815181106116fe576116fe611ca6565b602002602001015110156117645784818151811061171e5761171e611ca6565b6020026020010151826040517f2b13aef5000000000000000000000000000000000000000000000000000000008152600401610857929190918252602082015260400190565b600061178887838151811061177b5761177b611ca6565b6020026020010151610b0e565b90508084838151811061179d5761179d611ca6565b6020908102919091010152506001016116e2565b5090949350505050565b60003682900380359060208101359060400135831a601b81148015906117e5575060ff8116601c14155b1561181f576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610857565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082111561187c576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610857565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa1580156118cf573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015194505073ffffffffffffffffffffffffffffffffffffffff841661194a576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610857565b50505092915050565b600080806119618536611c5b565b90508035925060208101359150602184106119ab576040517fc000fc4200000000000000000000000000000000000000000000000000000000815260048101859052602401610857565b8360200360080282901c9150509250929050565b6000602082840312156119d157600080fd5b5035919050565b6000602082840312156119ea57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e8e57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611a8457611a84611a0e565b604052919050565b600067ffffffffffffffff821115611aa657611aa6611a0e565b5060051b60200190565b60006020808385031215611ac357600080fd5b823567ffffffffffffffff811115611ada57600080fd5b8301601f81018513611aeb57600080fd5b8035611afe611af982611a8c565b611a3d565b81815260059190911b82018301908381019087831115611b1d57600080fd5b928401925b82841015611b3b57833582529284019290840190611b22565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611b7e57835183529284019291840191600101611b62565b50909695505050505050565b600060208284031215611b9c57600080fd5b813560ff81168114610e8e57600080fd5b600060208083528351808285015260005b81811015611bda57858101830151858201604001528201611bbe565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561037a5761037a611c19565b8181038181111561037a5761037a611c19565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c9f57611c9f611c19565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b808202811582820484141761037a5761037a611c19565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611d2a57611d2a611cec565b500490565b600082611d3e57611d3e611cec565b50069056fea2646970667358221220209d10c634d27b2a674ed0072c2c46fb70b9343f0e4d4f6222e5af40050ccb9364736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class SampleChainableStorageProxy__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SampleChainableStorageProxy__factory = SampleChainableStorageProxy__factory;
//# sourceMappingURL=SampleChainableStorageProxy__factory.js.map