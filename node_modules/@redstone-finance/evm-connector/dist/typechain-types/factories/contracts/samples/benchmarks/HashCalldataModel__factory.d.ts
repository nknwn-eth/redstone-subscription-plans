import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { HashCalldataModel, HashCalldataModelInterface } from "../../../../contracts/samples/benchmarks/HashCalldataModel";
type HashCalldataModelConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class HashCalldataModel__factory extends ContractFactory {
    constructor(...args: HashCalldataModelConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<HashCalldataModel>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): HashCalldataModel;
    connect(signer: Signer): HashCalldataModel__factory;
    static readonly bytecode = "0x608060405260006001556002805460ff1916905534801561001f57600080fd5b50611de18061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806395262d9f11610097578063d22158fa11610066578063d22158fa14610350578063e46e9d5c14610363578063f50b2efe146103a2578063f90c4924146103b557600080fd5b806395262d9f146102e25780639d866985146102f5578063b24ebfcc14610328578063c274583a1461033b57600080fd5b80634dcbab33116100d35780634dcbab331461020557806355a547d51461021a5780635acac63e146102225780635edf1075146102cf57600080fd5b80633ce142f5146100fa578063429989f0146101245780634ae4590714610137575b600080fd5b61010d6101083660046119b0565b6103bc565b60405160ff90911681526020015b60405180910390f35b61010d6101323660046119b0565b6103cd565b6101f76101453660046119cb565b60408051436020808301919091527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b168284015260548201979097526074810195909552609485019390935260b484019190915260d4808401919091528151808403909101815260f49092018152815191830191909120600081815292839052912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590565b60405190815260200161011b565b610218610213366004611a06565b610897565b005b6101f76109d4565b6101f7610230366004611a4c565b60408051436020808301919091527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b1682840152605482019590955260748101939093526094808401929092528051808403909201825260b49092018252805190830120600081815292839052912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590565b6102186102dd366004611a78565b610b2d565b61010d6102f03660046119b0565b610c13565b610318610303366004611acf565b60006020819052908152604090205460ff1681565b604051901515815260200161011b565b6101f7610336366004611b17565b610c1e565b610343610c29565b60405161011b9190611bf3565b61010d61035e3660046119b0565b610c5d565b610218610371366004611c5f565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6102186103b0366004611acf565b610ce3565b600361010d565b60006103c782610c13565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff821673f39fd6e51aad88f6f4ce6ab8827279cfffb922660361040857506000919050565b73ffffffffffffffffffffffffffffffffffffffff82167370997970c51812dc3a010c7d01b50e0d17dc79c80361044157506001919050565b73ffffffffffffffffffffffffffffffffffffffff8216733c44cdddb6a900fa2b585dd299e03d12fa4293bc0361047a57506002919050565b73ffffffffffffffffffffffffffffffffffffffff82167390f79bf6eb2c4f870365e785982e1f101e93b906036104b357506003919050565b73ffffffffffffffffffffffffffffffffffffffff82167315d34aaf54267db7d7c367839aaf71a00a2c6a65036104ec57506004919050565b73ffffffffffffffffffffffffffffffffffffffff8216739965507d1a55bcc2695c58ba16fb37d819b0a4dc0361052557506005919050565b73ffffffffffffffffffffffffffffffffffffffff821673976ea74026e726554db657fa54763abd0c3a0aa90361055e57506006919050565b73ffffffffffffffffffffffffffffffffffffffff82167314dc79964da2c08b23698b3d3cc7ca32193d99550361059757506007919050565b73ffffffffffffffffffffffffffffffffffffffff82167323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f036105d057506008919050565b73ffffffffffffffffffffffffffffffffffffffff821673a0ee7a142d267c1f36714e4a8f75612f20a797200361060957506009919050565b73ffffffffffffffffffffffffffffffffffffffff821673bcd4042de499d14e55001ccbb24a551f3b954096036106425750600a919050565b73ffffffffffffffffffffffffffffffffffffffff82167371be63f3384f5fb98995898a86b02fb2426c57880361067b5750600b919050565b73ffffffffffffffffffffffffffffffffffffffff821673fabb0ac9d68b0b445fb7357272ff202c5651694a036106b45750600c919050565b73ffffffffffffffffffffffffffffffffffffffff8216731cbd3b2770909d4e10f157cabc84c7264073c9ec036106ed5750600d919050565b73ffffffffffffffffffffffffffffffffffffffff821673df3e18d64bc6a983f673ab319ccae4f1a57c7097036107265750600e919050565b73ffffffffffffffffffffffffffffffffffffffff821673cd3b766ccdd6ae721141f452c550ca635964ce710361075f5750600f919050565b73ffffffffffffffffffffffffffffffffffffffff8216732546bcd3c84621e976d8185a91a922ae77ecec300361079857506010919050565b73ffffffffffffffffffffffffffffffffffffffff821673bda5747bfd65f08deb54cb465eb87d40e51b197e036107d157506011919050565b73ffffffffffffffffffffffffffffffffffffffff821673dd2fd4581271e230360230f9337d5c0430bf44c00361080a57506012919050565b73ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c11990361084357506013919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b919050565b604080516020808201889052606087901b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001682840152605482018690526074820185905260948083018590528351808403909101815260b490920183528151918101919091206000818152918290529190205460ff168015156001036109695761092185610d26565b60015560025460ff161561096457600082815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b6109cb565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f52657175657374206e6f7420666f756e640000000000000000000000000000006044820152606401610889565b50505050505050565b6000806109df610d96565b905060006109ec82610ecb565b925061ffff1690506000819003610a2f576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610b27576000610a4584610f33565b9050600080610a55606887611cb0565b90506000610a638236611cc3565b9050803592508265ffffffffffff16600003610aab576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87600003610ac3578265ffffffffffff169750610b04565b878365ffffffffffff1614610b04576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b0e8488611cb0565b9650505050508080610b1f90611cd6565b915050610a32565b50505090565b6040805160208082018a9052606089901b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000168284015260548201889052607482018790526094820186905260b4820185905260d48083018590528351808403909101815260f490920183528151918101919091206000818152918290529190205460ff1680151560010361096957610bc586610d26565b60015560025460ff1615610c0857600082815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b505050505050505050565b60006103c782610c5d565b60006103c782610f6f565b60606040517f608b530700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c119903610cda576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610889565b6103c7826103cd565b6501812f2590c0811015610d23576040517f355b874300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110610d5f57610d5f611d0e565b602002602001018181525050610d7481610f7a565b600081518110610d8657610d86611d0e565b6020026020010151915050919050565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610dfe576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610e3b576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610e74600362ffffff8516611cb0565b610e7e9190611cb0565b905036610e8c600283611cb0565b1115610ec4576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b60008080610eda602085611cb0565b905036811115610f16576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3681900335925082610f29600286611cb0565b9250925050915091565b6000806000610f4184610f9c565b9092509050604e610f53826020611cb0565b610f5d9084611d3d565b610f679190611cb0565b949350505050565b60006103c782610fef565b6060600080610f888461111c565b91509150610f9581610ce3565b5092915050565b6000808080806020610faf604188611cb0565b610fb99190611cb0565b610fc39036611cc3565b803593509050610fd4600382611cc3565b62ffffff9390931696923563ffffffff169550919350505050565b600081516002036110465760028260018151811061100f5761100f611d0e565b60200260200101518360008151811061102a5761102a611d0e565b602002602001015161103c9190611cb0565b6103c79190611d83565b8151600003611081576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61108a82611369565b60006002835161109a9190611d83565b9050600283516110aa9190611d97565b60000361110a5760008382815181106110c5576110c5611d0e565b6020026020010151846001846110db9190611cc3565b815181106110eb576110eb611d0e565b60200260200101516110fd9190611cb0565b9050610f67600282611d83565b828181518110610d8657610d86611d0e565b6060600080835167ffffffffffffffff81111561113b5761113b611ae8565b604051908082528060200260200182016040528015611164578160200160208202803683370190505b5090506000845167ffffffffffffffff81111561118357611183611ae8565b6040519080825280602002602001820160405280156111ac578160200160208202803683370190505b5090506000855167ffffffffffffffff8111156111cb576111cb611ae8565b6040519080825280602002602001820160405280156111fe57816020015b60608152602001906001900390816111e95790505b509050600360005b8751811015611277578167ffffffffffffffff81111561122857611228611ae8565b604051908082528060200260200182016040528015611251578160200160208202803683370190505b5083828151811061126457611264611d0e565b6020908102919091010152600101611206565b506000611282610d96565b9050600061128f82610ecb565b60405190935061ffff909116915060005b828110156113505760006112b78c8a8a8a896113b7565b909550905060008190036112f7576040517fdfb25a7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b898114611340578960000361130e57809950611340565b6040517f4cbc474200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50602082016040526001016112a0565b5061135b8588611660565b985050505050505050915091565b8051602082016020820281019150805b828110156113b157815b818110156113a857815181518082101561139e578084528183525b5050602001611383565b50602001611379565b50505050565b60008060008060006113c886610f9c565b909250905060008060608180600d6113e1602088611cb0565b6113eb9089611d3d565b6113f59190611cb0565b9150600061140460688d611cb0565b61140e9036611cc3565b905060008361141e60418f611cb0565b6114289190611cb0565b6114329036611cc3565b905061143e8482611451565b9450836020860120955081359250611493565b604080518381526020818501810190925260009101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b8265ffffffffffff169a506114b48660418f6114af9190611cb0565b611788565b96506114bf876103bc565b60ff16995050505050505050604e866114d89190611cb0565b955060008060005b8481101561164d5760206114f4858b611cb0565b6114fe9190611cb0565b985061150a8985611920565b909350915060005b8d51811015611644578d818151811061152d5761152d611d0e565b6020026020010151840361163c5760008c828151811061154f5761154f611d0e565b6020026020010151905061156881896001901b16151590565b1580156115915750600360ff168e838151811061158757611587611d0e565b6020026020010151105b1561163657838c83815181106115a9576115a9611d0e565b60200260200101518f84815181106115c3576115c3611d0e565b6020026020010151815181106115db576115db611d0e565b6020026020010181815250508d82815181106115f9576115f9611d0e565b60200260200101805180919061160e90611cd6565b9052506001881b81178d838151811061162957611629611d0e565b6020026020010181815250505b50611644565b600101611512565b506001016114e0565b5050508594505050509550959350505050565b60606000835167ffffffffffffffff81111561167e5761167e611ae8565b6040519080825280602002602001820160405280156116a7578160200160208202803683370190505b509050600360005b855181101561177e57818582815181106116cb576116cb611d0e565b60200260200101511015611731578481815181106116eb576116eb611d0e565b6020026020010151826040517f2b13aef5000000000000000000000000000000000000000000000000000000008152600401610889929190918252602082015260400190565b600061175587838151811061174857611748611d0e565b6020026020010151610c1e565b90508084838151811061176a5761176a611d0e565b6020908102919091010152506001016116af565b5090949350505050565b60003682900380359060208101359060400135831a601b81148015906117b2575060ff8116601c14155b156117ec576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610889565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115611849576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610889565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561189c573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015194505073ffffffffffffffffffffffffffffffffffffffff8416611917576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610889565b50505092915050565b6000808061192e8536611cc3565b9050803592506020810135915060218410611978576040517fc000fc4200000000000000000000000000000000000000000000000000000000815260048101859052602401610889565b8360200360080282901c9150509250929050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461089257600080fd5b6000602082840312156119c257600080fd5b610ec48261198c565b600080600080600060a086880312156119e357600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080600080600060a08688031215611a1e57600080fd5b85359450611a2e6020870161198c565b94979496505050506040830135926060810135926080909101359150565b600080600060608486031215611a6157600080fd5b505081359360208301359350604090920135919050565b600080600080600080600060e0888a031215611a9357600080fd5b87359650611aa36020890161198c565b96999698505050506040850135946060810135946080820135945060a0820135935060c0909101359150565b600060208284031215611ae157600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020808385031215611b2a57600080fd5b823567ffffffffffffffff80821115611b4257600080fd5b818501915085601f830112611b5657600080fd5b813581811115611b6857611b68611ae8565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715611bab57611bab611ae8565b604052918252848201925083810185019188831115611bc957600080fd5b938501935b82851015611be757843584529385019392850192611bce565b98975050505050505050565b600060208083528351808285015260005b81811015611c2057858101830151858201604001528201611c04565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600060208284031215611c7157600080fd5b81358015158114610ec457600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156103c7576103c7611c81565b818103818111156103c7576103c7611c81565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d0757611d07611c81565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80820281158282048414176103c7576103c7611c81565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611d9257611d92611d54565b500490565b600082611da657611da6611d54565b50069056fea264697066735822122047d6d50d8c77ea886ab5c837a91e91b0c1c450a37c4b9f72fd3b637bcb83807664736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CalldataMustHaveValidPayload";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CalldataOverOrUnderFlow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CanNotPickMedianOfEmptyArray";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampMustNotBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampsMustBeEqual";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataTimestampCannotBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EachSignerMustProvideTheSameValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EmptyCalldataPointersArr";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "GetDataServiceIdNotImplemented";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncorrectUnsignedMetadataSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedSignersCount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "requiredSignersCount";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientNumberOfUniqueSigners";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCalldataPointer";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "signedHash";
            readonly type: "bytes32";
        }];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "RedstonePayloadMustHaveAtLeastOneDataPackage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receivedSigner";
            readonly type: "address";
        }];
        readonly name: "SignerNotAuthorised";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TimestampIsNotValid";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TimestampsMustBeEqual";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "valueByteSize";
            readonly type: "uint256";
        }];
        readonly name: "TooLargeValueByteSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "values";
            readonly type: "uint256[]";
        }];
        readonly name: "aggregateValues";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }];
        readonly name: "executeRequestWith3ArgsWithPrices";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg4";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg5";
            readonly type: "bytes32";
        }];
        readonly name: "executeRequestWith5ArgsWithPrices";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "extractTimestampsAndAssertAllAreEqual";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "extractedTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockExceptLastOneAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedMockSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDataServiceId";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getUniqueSignersThreshold";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "requests";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }];
        readonly name: "sendRequestWith3Args";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg4";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg5";
            readonly type: "bytes32";
        }];
        readonly name: "sendRequestWith5Args";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_deleteFromStorage";
            readonly type: "bool";
        }];
        readonly name: "setDeleteFromStorage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedTimestampMilliseconds";
            readonly type: "uint256";
        }];
        readonly name: "validateTimestamp";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): HashCalldataModelInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): HashCalldataModel;
}
export {};
//# sourceMappingURL=HashCalldataModel__factory.d.ts.map