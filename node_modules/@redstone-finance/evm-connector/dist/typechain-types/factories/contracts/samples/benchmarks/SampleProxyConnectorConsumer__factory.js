"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SampleProxyConnectorConsumer__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "CanNotPickMedianOfEmptyArray",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampMustNotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [],
        name: "DataTimestampCannotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "GetDataServiceIdNotImplemented",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "signedHash",
                type: "bytes32",
            },
        ],
        name: "InvalidSignature",
        type: "error",
    },
    {
        inputs: [],
        name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [],
        name: "TimestampIsNotValid",
        type: "error",
    },
    {
        inputs: [],
        name: "TimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "valueByteSize",
                type: "uint256",
            },
        ],
        name: "TooLargeValueByteSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "aggregateValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "extractTimestampFromRedstonePayload",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "extractTimestampsAndAssertAllAreEqual",
        outputs: [
            {
                internalType: "uint256",
                name: "extractedTimestamp",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAllMockAuthorised",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAllMockExceptLastOneAuthorised",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedMockSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getComputationResult",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDataServiceId",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUniqueSignersThreshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "getValueForDataFeedId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "mockArg1",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "mockArg2",
                type: "string",
            },
            {
                internalType: "string",
                name: "mockArg3",
                type: "string",
            },
            {
                internalType: "string",
                name: "mockArg4",
                type: "string",
            },
            {
                internalType: "string",
                name: "mockArg5",
                type: "string",
            },
            {
                internalType: "string",
                name: "mockArg6",
                type: "string",
            },
        ],
        name: "getValueManyParams",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "getValuesForDataFeedIds",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "latestSavedValue",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "processOracleValue",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "processOracleValues",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "returnMsgValue",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "revertWithTestMessage",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "revertWithoutMessage",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "saveOracleValueInContractStorage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "newUniqueSignersThreshold",
                type: "uint8",
            },
        ],
        name: "updateUniqueSignersThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "validateTimestamp",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080604052600060019081556002805460ff1916909117905534801561002457600080fd5b50611dcb806100346000396000f3fe6080604052600436106101755760003560e01c80638e7a4120116100cb578063c274583a1161007f578063f50b2efe11610059578063f50b2efe146103e0578063f90c492414610400578063fabdf8361461041857600080fd5b8063c274583a14610389578063d22158fa146103ab578063d6a454c5146103cb57600080fd5b8063a09f9c3a116100b0578063a09f9c3a14610305578063b24ebfcc14610354578063c06a97cb1461037457600080fd5b80638e7a4120146102df57806395262d9f146102e557600080fd5b8063429989f01161012d57806355a547d51161010757806355a547d5146102945780635ddf81ba146102a95780637a1202c8146102bf57600080fd5b8063429989f0146102275780634db39f23146102475780634f178e441461026757600080fd5b80633c154daf1161015e5780633c154daf146101be5780633ce142f5146101d55780633d60fee31461020757600080fd5b80630f6561e71461017a578063351d31ab1461019e575b600080fd5b34801561018657600080fd5b506001545b6040519081526020015b60405180910390f35b3480156101aa57600080fd5b5061018b6101b93660046119c8565b610438565b3480156101ca57600080fd5b506101d361044f565b005b3480156101e157600080fd5b506101f56101f0366004611aad565b6104b6565b60405160ff9091168152602001610195565b34801561021357600080fd5b506101d3610222366004611ae3565b6104c7565b34801561023357600080fd5b506101f5610242366004611aad565b6104d6565b34801561025357600080fd5b506101d3610262366004611ae3565b610996565b34801561027357600080fd5b50610287610282366004611b20565b6109c8565b6040516101959190611bb6565b3480156102a057600080fd5b5061018b6109d3565b3480156102b557600080fd5b5061018b60005481565b3480156102cb57600080fd5b5061018b6102da366004611ae3565b610b2c565b3461018b565b3480156102f157600080fd5b506101f5610300366004611aad565b610b37565b34801561031157600080fd5b506101d3610320366004611bfa565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b34801561036057600080fd5b5061018b61036f366004611b20565b610b42565b34801561038057600080fd5b506101d3600080fd5b34801561039557600080fd5b5061039e610b4d565b6040516101959190611c1d565b3480156103b757600080fd5b506101f56103c6366004611aad565b610b81565b3480156103d757600080fd5b5061018b610c07565b3480156103ec57600080fd5b506101d36103fb366004611ae3565b610c16565b34801561040c57600080fd5b5060025460ff166101f5565b34801561042457600080fd5b506101d3610433366004611b20565b610c59565b600061044388610cc6565b98975050505050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f54657374206d657373616765000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60006104c182610b37565b92915050565b6104d081610cc6565b60005550565b600073ffffffffffffffffffffffffffffffffffffffff821673f39fd6e51aad88f6f4ce6ab8827279cfffb922660361051157506000919050565b73ffffffffffffffffffffffffffffffffffffffff82167370997970c51812dc3a010c7d01b50e0d17dc79c80361054a57506001919050565b73ffffffffffffffffffffffffffffffffffffffff8216733c44cdddb6a900fa2b585dd299e03d12fa4293bc0361058357506002919050565b73ffffffffffffffffffffffffffffffffffffffff82167390f79bf6eb2c4f870365e785982e1f101e93b906036105bc57506003919050565b73ffffffffffffffffffffffffffffffffffffffff82167315d34aaf54267db7d7c367839aaf71a00a2c6a65036105f557506004919050565b73ffffffffffffffffffffffffffffffffffffffff8216739965507d1a55bcc2695c58ba16fb37d819b0a4dc0361062e57506005919050565b73ffffffffffffffffffffffffffffffffffffffff821673976ea74026e726554db657fa54763abd0c3a0aa90361066757506006919050565b73ffffffffffffffffffffffffffffffffffffffff82167314dc79964da2c08b23698b3d3cc7ca32193d9955036106a057506007919050565b73ffffffffffffffffffffffffffffffffffffffff82167323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f036106d957506008919050565b73ffffffffffffffffffffffffffffffffffffffff821673a0ee7a142d267c1f36714e4a8f75612f20a797200361071257506009919050565b73ffffffffffffffffffffffffffffffffffffffff821673bcd4042de499d14e55001ccbb24a551f3b9540960361074b5750600a919050565b73ffffffffffffffffffffffffffffffffffffffff82167371be63f3384f5fb98995898a86b02fb2426c5788036107845750600b919050565b73ffffffffffffffffffffffffffffffffffffffff821673fabb0ac9d68b0b445fb7357272ff202c5651694a036107bd5750600c919050565b73ffffffffffffffffffffffffffffffffffffffff8216731cbd3b2770909d4e10f157cabc84c7264073c9ec036107f65750600d919050565b73ffffffffffffffffffffffffffffffffffffffff821673df3e18d64bc6a983f673ab319ccae4f1a57c70970361082f5750600e919050565b73ffffffffffffffffffffffffffffffffffffffff821673cd3b766ccdd6ae721141f452c550ca635964ce71036108685750600f919050565b73ffffffffffffffffffffffffffffffffffffffff8216732546bcd3c84621e976d8185a91a922ae77ecec30036108a157506010919050565b73ffffffffffffffffffffffffffffffffffffffff821673bda5747bfd65f08deb54cb465eb87d40e51b197e036108da57506011919050565b73ffffffffffffffffffffffffffffffffffffffff821673dd2fd4581271e230360230f9337d5c0430bf44c00361091357506012919050565b73ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c11990361094c57506013919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016104ad565b60006109a182610cc6565b90506109ae81602a611c9a565b600160008282546109bf9190611cb1565b90915550505050565b60606104c182610d36565b6000806109de610d58565b905060006109eb82610e6f565b925061ffff1690506000819003610a2e576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610b26576000610a4484610ed7565b9050600080610a54606887611cb1565b90506000610a628236611cc4565b9050803592508265ffffffffffff16600003610aaa576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87600003610ac2578265ffffffffffff169750610b03565b878365ffffffffffff1614610b03576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b0d8488611cb1565b9650505050508080610b1e90611cd7565b915050610a31565b50505090565b60006104c182610cc6565b60006104c182610b81565b60006104c182610f13565b60606040517f608b530700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c119903610bfe576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016104ad565b6104c1826104d6565b6000610c116109d3565b905090565b6501812f2590c0811015610c56576040517f355b874300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000610c6482610d36565b905060005b8251811015610cc157818181518110610c8457610c84611d0f565b6020026020010151602a610c989190611c9a565b60016000828254610ca99190611cb1565b90915550819050610cb981611cd7565b915050610c69565b505050565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110610cff57610cff611d0f565b602002602001018181525050610d1481610d36565b600081518110610d2657610d26611d0f565b6020026020010151915050919050565b6060600080610d4484610f1e565b91509150610d5181610c16565b5092915050565b60006602ed57011e0000601f1936013581161480610da2576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610ddf576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610e18600362ffffff8516611cb1565b610e229190611cb1565b905036610e30600283611cb1565b1115610e68576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b60008080610e7e602085611cb1565b905036811115610eba576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3681900335925082610ecd600286611cb1565b9250925050915091565b6000806000610ee58461117c565b9092509050604e610ef7826020611cb1565b610f019084611c9a565b610f0b9190611cb1565b949350505050565b60006104c1826111cf565b6060600080835167ffffffffffffffff811115610f3d57610f3d6118f8565b604051908082528060200260200182016040528015610f66578160200160208202803683370190505b5090506000845167ffffffffffffffff811115610f8557610f856118f8565b604051908082528060200260200182016040528015610fae578160200160208202803683370190505b5090506000855167ffffffffffffffff811115610fcd57610fcd6118f8565b60405190808252806020026020018201604052801561100057816020015b6060815260200190600190039081610feb5790505b509050600061101160025460ff1690565b60ff16905060005b875181101561108a578167ffffffffffffffff81111561103b5761103b6118f8565b604051908082528060200260200182016040528015611064578160200160208202803683370190505b5083828151811061107757611077611d0f565b6020908102919091010152600101611019565b506000611095610d58565b905060006110a282610e6f565b60405190935061ffff909116915060005b828110156111635760006110ca8c8a8a8a896112fc565b9095509050600081900361110a576040517fdfb25a7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b898114611153578960000361112157809950611153565b6040517f4cbc474200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50602082016040526001016110b3565b5061116e858861158b565b985050505050505050915091565b600080808080602061118f604188611cb1565b6111999190611cb1565b6111a39036611cc4565b8035935090506111b4600382611cc4565b62ffffff9390931696923563ffffffff169550919350505050565b60008151600203611226576002826001815181106111ef576111ef611d0f565b60200260200101518360008151811061120a5761120a611d0f565b602002602001015161121c9190611cb1565b6104c19190611d6d565b8151600003611261576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61126a826116c4565b60006002835161127a9190611d6d565b90506002835161128a9190611d81565b6000036112ea5760008382815181106112a5576112a5611d0f565b6020026020010151846001846112bb9190611cc4565b815181106112cb576112cb611d0f565b60200260200101516112dd9190611cb1565b9050610f0b600282611d6d565b828181518110610d2657610d26611d0f565b600080600080600061130d8661117c565b909250905060008060608180600d611326602088611cb1565b6113309089611c9a565b61133a9190611cb1565b9150600061134960688d611cb1565b6113539036611cc4565b905060008361136360418f611cb1565b61136d9190611cb1565b6113779036611cc4565b90506113838482611396565b94508360208601209550813592506113ba565b60408051838152602081850181019092526000910183838237601f19019392505050565b8265ffffffffffff169a506113db8660418f6113d69190611cb1565b611712565b96506113e6876104b6565b60ff16995050505050505050604e866113ff9190611cb1565b955060008060005b8481101561157857602061141b858b611cb1565b6114259190611cb1565b9850611431898561188c565b909350915060005b8d5181101561156f578d818151811061145457611454611d0f565b602002602001015184036115675760008c828151811061147657611476611d0f565b6020026020010151905061148f81896001901b16151590565b1580156114bc575060025460ff1660ff168e83815181106114b2576114b2611d0f565b6020026020010151105b1561156157838c83815181106114d4576114d4611d0f565b60200260200101518f84815181106114ee576114ee611d0f565b60200260200101518151811061150657611506611d0f565b6020026020010181815250508d828151811061152457611524611d0f565b60200260200101805180919061153990611cd7565b9052506001881b81178d838151811061155457611554611d0f565b6020026020010181815250505b5061156f565b600101611439565b50600101611407565b5050508594505050509550959350505050565b60606000835167ffffffffffffffff8111156115a9576115a96118f8565b6040519080825280602002602001820160405280156115d2578160200160208202803683370190505b50905060006115e360025460ff1690565b60ff16905060005b85518110156116ba578185828151811061160757611607611d0f565b6020026020010151101561166d5784818151811061162757611627611d0f565b6020026020010151826040517f2b13aef50000000000000000000000000000000000000000000000000000000081526004016104ad929190918252602082015260400190565b600061169187838151811061168457611684611d0f565b6020026020010151610b42565b9050808483815181106116a6576116a6611d0f565b6020908102919091010152506001016115eb565b5090949350505050565b8051602082016020820281019150805b8281101561170c57815b818110156117035781518151808210156116f9578084528183525b50506020016116de565b506020016116d4565b50505050565b60003682900380359060208101359060400135831a601b811480159061173c575060ff8116601c14155b15611776576040517f666b7cba000000000000000000000000000000000000000000000000000000008152600481018790526024016104ad565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156117d3576040517f666b7cba000000000000000000000000000000000000000000000000000000008152600481018790526024016104ad565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611826573d6000803e3d6000fd5b5050604051601f19015194505073ffffffffffffffffffffffffffffffffffffffff8416611883576040517f666b7cba000000000000000000000000000000000000000000000000000000008152600481018790526024016104ad565b50505092915050565b6000808061189a8536611cc4565b90508035925060208101359150602184106118e4576040517fc000fc42000000000000000000000000000000000000000000000000000000008152600481018590526024016104ad565b8360200360080282901c9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611950576119506118f8565b604052919050565b600082601f83011261196957600080fd5b813567ffffffffffffffff811115611983576119836118f8565b6119966020601f19601f84011601611927565b8181528460208386010111156119ab57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600060e0888a0312156119e357600080fd5b8735965060208801359550604088013567ffffffffffffffff80821115611a0957600080fd5b611a158b838c01611958565b965060608a0135915080821115611a2b57600080fd5b611a378b838c01611958565b955060808a0135915080821115611a4d57600080fd5b611a598b838c01611958565b945060a08a0135915080821115611a6f57600080fd5b611a7b8b838c01611958565b935060c08a0135915080821115611a9157600080fd5b50611a9e8a828b01611958565b91505092959891949750929550565b600060208284031215611abf57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e6857600080fd5b600060208284031215611af557600080fd5b5035919050565b600067ffffffffffffffff821115611b1657611b166118f8565b5060051b60200190565b60006020808385031215611b3357600080fd5b823567ffffffffffffffff811115611b4a57600080fd5b8301601f81018513611b5b57600080fd5b8035611b6e611b6982611afc565b611927565b81815260059190911b82018301908381019087831115611b8d57600080fd5b928401925b82841015611bab57833582529284019290840190611b92565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611bee57835183529284019291840191600101611bd2565b50909695505050505050565b600060208284031215611c0c57600080fd5b813560ff81168114610e6857600080fd5b600060208083528351808285015260005b81811015611c4a57858101830151858201604001528201611c2e565b506000604082860101526040601f19601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176104c1576104c1611c6b565b808201808211156104c1576104c1611c6b565b818103818111156104c1576104c1611c6b565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d0857611d08611c6b565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611d7c57611d7c611d3e565b500490565b600082611d9057611d90611d3e565b50069056fea2646970667358221220a34d644f77fb04d40078b669404f50c8d001865e4db0ee010569599ab2cf6cf264736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class SampleProxyConnectorConsumer__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SampleProxyConnectorConsumer__factory = SampleProxyConnectorConsumer__factory;
//# sourceMappingURL=SampleProxyConnectorConsumer__factory.js.map