"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SampleChainableProxyConnector__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampMustNotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [],
        name: "DataTimestampCannotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "result",
                type: "bytes",
            },
        ],
        name: "ProxyCalldataFailedWithCustomError",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "message",
                type: "string",
            },
        ],
        name: "ProxyCalldataFailedWithStringMessage",
        type: "error",
    },
    {
        inputs: [],
        name: "ProxyCalldataFailedWithoutErrMsg",
        type: "error",
    },
    {
        inputs: [],
        name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [],
        name: "TimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "valueByteSize",
                type: "uint256",
            },
        ],
        name: "TooLargeValueByteSize",
        type: "error",
    },
    {
        inputs: [],
        name: "extractTimestampsAndAssertAllAreEqual",
        outputs: [
            {
                internalType: "uint256",
                name: "extractedTimestamp",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "processOracleValue",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "processOracleValues",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_sampleProxyConnectorConsumer",
                type: "address",
            },
        ],
        name: "registerConsumer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_sampleProxyConnector",
                type: "address",
            },
        ],
        name: "registerNextConnector",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610cb1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806355a547d51161005057806355a547d5146100d6578063c6062a68146100f0578063fabdf8361461014557600080fd5b806344b22fdd1461006c5780634db39f23146100c3575b600080fd5b6100c161007a36600461099c565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b005b6100c16100d13660046109d2565b610158565b6100de61032c565b60405190815260200160405180910390f35b6100c16100fe36600461099c565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6100c1610153366004610a1a565b610485565b60015473ffffffffffffffffffffffffffffffffffffffff161561025357604051602481018290526000907f4db39f2300000000000000000000000000000000000000000000000000000000906044015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915260015490915061024e9073ffffffffffffffffffffffffffffffffffffffff168260006104d9565b505050565b604051602481018290526000907f4db39f2300000000000000000000000000000000000000000000000000000000906044015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526000805491925061024e9173ffffffffffffffffffffffffffffffffffffffff169083906104d9565b60008061033761057a565b90506000610344826106af565b925061ffff1690506000819003610387576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561047f57600061039d84610717565b90506000806103ad606887610b25565b905060006103bb8236610b38565b9050803592508265ffffffffffff16600003610403576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760000361041b578265ffffffffffff16975061045c565b878365ffffffffffff161461045c576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104668488610b25565b965050505050808061047790610b4b565b91505061038a565b50505090565b60015473ffffffffffffffffffffffffffffffffffffffff16156104be57600063fabdf83660e01b826040516024016101a99190610b83565b600063fabdf83660e01b826040516024016102869190610b83565b606060006104e684610753565b90506000808673ffffffffffffffffffffffffffffffffffffffff168561050e576000610510565b345b8460405161051e9190610beb565b60006040518083038185875af1925050503d806000811461055b576040519150601f19603f3d011682016040523d82523d6000602084013e610560565b606091505b509150915061056f82826107fb565b979650505050505050565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0360135811614806105e2576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000366029111561061f576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610658600362ffffff8516610b25565b6106629190610b25565b905036610670600283610b25565b11156106a8576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080806106be602085610b25565b9050368111156106fa576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b368190033592508261070d600286610b25565b9250925050915091565b6000806000610725846108e9565b9092509050604e610737826020610b25565b6107419084610c07565b61074b9190610b25565b949350505050565b8051606090600061076261093c565b905060006107708284610b25565b9050368211156107ac576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060604051905081815285602001848101826020015b818310156107da5782518152602092830192016107c2565b50505082833603856020018301379190920181016020016040529392505050565b6060826108e057815160000361083d576040517f567fe27a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208201517f08c379a0000000000000000000000000000000000000000000000000000000001480156108ac576040517f0f7e827800000000000000000000000000000000000000000000000000000000815260448401906108a3908290600401610c68565b60405180910390fd5b826040517ffd36fde30000000000000000000000000000000000000000000000000000000081526004016108a39190610c68565b50805b92915050565b60008080808060206108fc604188610b25565b6109069190610b25565b6109109036610b38565b803593509050610921600382610b38565b62ffffff9390931696923563ffffffff169550919350505050565b60008061094761057a565b90506000610954826106af565b925061ffff16905060005b8181101561099457600061097284610717565b905061097e8185610b25565b935050808061098c90610b4b565b91505061095f565b509092915050565b6000602082840312156109ae57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106a857600080fd5b6000602082840312156109e457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020808385031215610a2d57600080fd5b823567ffffffffffffffff80821115610a4557600080fd5b818501915085601f830112610a5957600080fd5b813581811115610a6b57610a6b6109eb565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715610aae57610aae6109eb565b604052918252848201925083810185019188831115610acc57600080fd5b938501935b82851015610aea57843584529385019392850192610ad1565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156108e3576108e3610af6565b818103818111156108e3576108e3610af6565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b7c57610b7c610af6565b5060010190565b6020808252825182820181905260009190848201906040850190845b81811015610bbb57835183529284019291840191600101610b9f565b50909695505050505050565b60005b83811015610be2578181015183820152602001610bca565b50506000910152565b60008251610bfd818460208701610bc7565b9190910192915050565b80820281158282048414176108e3576108e3610af6565b60008151808452610c36816020860160208601610bc7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106a86020830184610c1e56fea2646970667358221220baa0d8702098ca4511f1b7f704bb5911bd98456c46a798f4b24e31404aa1824c64736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class SampleChainableProxyConnector__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SampleChainableProxyConnector__factory = SampleChainableProxyConnector__factory;
//# sourceMappingURL=SampleChainableProxyConnector__factory.js.map