import { ScoreType, SignedDataPackage } from "@redstone-finance/protocol";
import { Contract, Signer } from "ethers";
import { BaseWrapper } from "./BaseWrapper";
export interface OnDemandRequestParams {
    signer: Signer;
    scoreType: ScoreType;
}
export declare class OnDemandRequestWrapper<T extends Contract> extends BaseWrapper<T> {
    private readonly requestParams;
    private readonly nodeUrls;
    constructor(requestParams: OnDemandRequestParams, nodeUrls: string[]);
    getUnsignedMetadata(): string;
    dryRunToVerifyPayload(payloads: string[]): Promise<string>;
    getDataPackagesForPayload(): Promise<SignedDataPackage[]>;
}
//# sourceMappingURL=OnDemandRequestWrapper.d.ts.map