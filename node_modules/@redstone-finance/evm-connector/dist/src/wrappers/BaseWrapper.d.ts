import { SignedDataPackage } from "@redstone-finance/protocol";
import { Contract } from "ethers";
export declare abstract class BaseWrapper<T extends Contract> {
    protected contract: T;
    protected explicitMetadataTimestamp?: number;
    abstract getDataPackagesForPayload(): Promise<SignedDataPackage[]>;
    abstract getUnsignedMetadata(): string;
    getBytesDataForAppending(): Promise<string>;
    getRedstonePayloadForManualUsage(contract: T): Promise<string>;
    prepareRedstonePayload(shouldBeMultipleOf32: boolean): Promise<string>;
    setContractForFetchingDefaultParams(contract: T): void;
    overwriteEthersContract(contract: T): T;
    private overwritePopulateTransaction;
    private overwriteFunction;
    private static handleContractOverrides;
    setMetadataTimestamp(timestamp: number): void;
    getMetadataTimestamp(): number;
}
//# sourceMappingURL=BaseWrapper.d.ts.map