/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProxyConnector,
  ProxyConnectorInterface,
} from "../../../contracts/core/ProxyConnector";

const _abi = [
  {
    inputs: [],
    name: "CalldataMustHaveValidPayload",
    type: "error",
  },
  {
    inputs: [],
    name: "CalldataOverOrUnderFlow",
    type: "error",
  },
  {
    inputs: [],
    name: "DataPackageTimestampMustNotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "DataPackageTimestampsMustBeEqual",
    type: "error",
  },
  {
    inputs: [],
    name: "DataTimestampCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "EachSignerMustProvideTheSameValue",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyCalldataPointersArr",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectUnsignedMetadataSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedSignersCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredSignersCount",
        type: "uint256",
      },
    ],
    name: "InsufficientNumberOfUniqueSigners",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCalldataPointer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "ProxyCalldataFailedWithCustomError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "ProxyCalldataFailedWithStringMessage",
    type: "error",
  },
  {
    inputs: [],
    name: "ProxyCalldataFailedWithoutErrMsg",
    type: "error",
  },
  {
    inputs: [],
    name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receivedSigner",
        type: "address",
      },
    ],
    name: "SignerNotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "TimestampsMustBeEqual",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "valueByteSize",
        type: "uint256",
      },
    ],
    name: "TooLargeValueByteSize",
    type: "error",
  },
  {
    inputs: [],
    name: "extractTimestampsAndAssertAllAreEqual",
    outputs: [
      {
        internalType: "uint256",
        name: "extractedTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104af806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806355a547d514610030575b600080fd5b61003861004a565b60405190815260200160405180910390f35b6000806100556101a3565b90506000610062826102d8565b925061ffff16905060008190036100a5576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561019d5760006100bb84610340565b90506000806100cb6068876103fe565b905060006100d98236610417565b9050803592508265ffffffffffff16600003610121576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87600003610139578265ffffffffffff16975061017a565b878365ffffffffffff161461017a576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61018484886103fe565b96505050505080806101959061042a565b9150506100a8565b50505090565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe03601358116148061020b576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610248576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610281600362ffffff85166103fe565b61028b91906103fe565b9050366102996002836103fe565b11156102d1576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080806102e76020856103fe565b905036811115610323576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36819003359250826103366002866103fe565b9250925050915091565b600080600061034e8461037c565b9092509050604e6103608260206103fe565b61036a9084610462565b61037491906103fe565b949350505050565b600080808080602061038f6041886103fe565b61039991906103fe565b6103a39036610417565b8035935090506103b4600382610417565b62ffffff9390931696923563ffffffff169550919350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610411576104116103cf565b92915050565b81810381811115610411576104116103cf565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361045b5761045b6103cf565b5060010190565b8082028115828204841417610411576104116103cf56fea264697066735822122036839e168908803e3e32dda04b80214cfe6a24d9df59fbe29cbaf500b13ce05f64736f6c63430008110033";

type ProxyConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyConnector__factory extends ContractFactory {
  constructor(...args: ProxyConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyConnector> {
    return super.deploy(overrides || {}) as Promise<ProxyConnector>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyConnector {
    return super.attach(address) as ProxyConnector;
  }
  override connect(signer: Signer): ProxyConnector__factory {
    return super.connect(signer) as ProxyConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyConnectorInterface {
    return new utils.Interface(_abi) as ProxyConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyConnector {
    return new Contract(address, _abi, signerOrProvider) as ProxyConnector;
  }
}
