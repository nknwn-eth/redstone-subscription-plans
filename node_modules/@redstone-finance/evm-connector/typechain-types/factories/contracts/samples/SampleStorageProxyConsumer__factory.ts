/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SampleStorageProxyConsumer,
  SampleStorageProxyConsumerInterface,
} from "../../../contracts/samples/SampleStorageProxyConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sampleStorageProxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UnexpectedOracleValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataFeedId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "expectedValue",
        type: "uint256",
      },
    ],
    name: "checkOracleValue",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataFeedIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "expectedValues",
        type: "uint256[]",
      },
    ],
    name: "checkOracleValues",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataFeedId",
        type: "bytes32",
      },
    ],
    name: "getOracleValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataFeedIds",
        type: "bytes32[]",
      },
    ],
    name: "getOracleValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161092a38038061092a83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610897806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630fb1d7d4146100515780639b606ed914610066578063f5bcb8d61461008f578063f8382ebb146100b0575b600080fd5b61006461005f3660046105b2565b6100c3565b005b61007961007436600461066d565b61020e565b60405161008691906106aa565b60405180910390f35b6100a261009d3660046106ee565b610337565b604051908152602001610086565b6100646100be366004610707565b6103d1565b600080546040517f9b606ed900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690639b606ed99061011a9086906004016106aa565b600060405180830381865afa158015610137573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261017d9190810190610729565b905060005b83518110156102085782818151811061019d5761019d6107ba565b60200260200101518282815181106101b7576101b76107ba565b6020026020010151146101f6576040517f4983170000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80610200816107e9565b915050610182565b50505050565b60606000825167ffffffffffffffff81111561022c5761022c6104a5565b604051908082528060200260200182016040528015610255578160200160208202803683370190505b50905060005b835181101561033057600054845173ffffffffffffffffffffffffffffffffffffffff9091169063f5bcb8d69086908490811061029a5761029a6107ba565b60200260200101516040518263ffffffff1660e01b81526004016102c091815260200190565b602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190610848565b828281518110610313576103136107ba565b602090810291909101015280610328816107e9565b91505061025b565b5092915050565b600080546040517ff5bcb8d60000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff9091169063f5bcb8d690602401602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190610848565b92915050565b600080546040517ff5bcb8d60000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169063f5bcb8d690602401602060405180830381865afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190610848565b90508181146104a0576040517f4983170000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561051b5761051b6104a5565b604052919050565b600067ffffffffffffffff82111561053d5761053d6104a5565b5060051b60200190565b600082601f83011261055857600080fd5b8135602061056d61056883610523565b6104d4565b82815260059290921b8401810191818101908684111561058c57600080fd5b8286015b848110156105a75780358352918301918301610590565b509695505050505050565b600080604083850312156105c557600080fd5b823567ffffffffffffffff808211156105dd57600080fd5b6105e986838701610547565b935060209150818501358181111561060057600080fd5b85019050601f8101861361061357600080fd5b803561062161056882610523565b81815260059190911b8201830190838101908883111561064057600080fd5b928401925b8284101561065e57833582529284019290840190610645565b80955050505050509250929050565b60006020828403121561067f57600080fd5b813567ffffffffffffffff81111561069657600080fd5b6106a284828501610547565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156106e2578351835292840192918401916001016106c6565b50909695505050505050565b60006020828403121561070057600080fd5b5035919050565b6000806040838503121561071a57600080fd5b50508035926020909101359150565b6000602080838503121561073c57600080fd5b825167ffffffffffffffff81111561075357600080fd5b8301601f8101851361076457600080fd5b805161077261056882610523565b81815260059190911b8201830190838101908783111561079157600080fd5b928401925b828410156107af57835182529284019290840190610796565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610841577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561085a57600080fd5b505191905056fea264697066735822122048f48c10d06571b452318525f8605df35571d494e20e05e3237f0b68d5ff5d3564736f6c63430008110033";

type SampleStorageProxyConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleStorageProxyConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleStorageProxyConsumer__factory extends ContractFactory {
  constructor(...args: SampleStorageProxyConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _sampleStorageProxy: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SampleStorageProxyConsumer> {
    return super.deploy(
      _sampleStorageProxy,
      overrides || {}
    ) as Promise<SampleStorageProxyConsumer>;
  }
  override getDeployTransaction(
    _sampleStorageProxy: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sampleStorageProxy, overrides || {});
  }
  override attach(address: string): SampleStorageProxyConsumer {
    return super.attach(address) as SampleStorageProxyConsumer;
  }
  override connect(signer: Signer): SampleStorageProxyConsumer__factory {
    return super.connect(signer) as SampleStorageProxyConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleStorageProxyConsumerInterface {
    return new utils.Interface(_abi) as SampleStorageProxyConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SampleStorageProxyConsumer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SampleStorageProxyConsumer;
  }
}
