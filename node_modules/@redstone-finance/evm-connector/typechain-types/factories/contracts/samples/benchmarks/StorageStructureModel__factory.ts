/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StorageStructureModel,
  StorageStructureModelInterface,
} from "../../../../contracts/samples/benchmarks/StorageStructureModel";

const _abi = [
  {
    inputs: [],
    name: "CalldataMustHaveValidPayload",
    type: "error",
  },
  {
    inputs: [],
    name: "CalldataOverOrUnderFlow",
    type: "error",
  },
  {
    inputs: [],
    name: "CanNotPickMedianOfEmptyArray",
    type: "error",
  },
  {
    inputs: [],
    name: "DataPackageTimestampMustNotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "DataPackageTimestampsMustBeEqual",
    type: "error",
  },
  {
    inputs: [],
    name: "DataTimestampCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "EachSignerMustProvideTheSameValue",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyCalldataPointersArr",
    type: "error",
  },
  {
    inputs: [],
    name: "GetDataServiceIdNotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectUnsignedMetadataSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedSignersCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredSignersCount",
        type: "uint256",
      },
    ],
    name: "InsufficientNumberOfUniqueSigners",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCalldataPointer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "signedHash",
        type: "bytes32",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receivedSigner",
        type: "address",
      },
    ],
    name: "SignerNotAuthorised",
    type: "error",
  },
  {
    inputs: [],
    name: "TimestampIsNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "TimestampsMustBeEqual",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "valueByteSize",
        type: "uint256",
      },
    ],
    name: "TooLargeValueByteSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "aggregateValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "executeRequestWith10ArgsWithPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "executeRequestWith3ArgsWithPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "executeRequestWith5ArgsWithPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "extractTimestampsAndAssertAllAreEqual",
    outputs: [
      {
        internalType: "uint256",
        name: "extractedTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signerAddress",
        type: "address",
      },
    ],
    name: "getAllMockAuthorised",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signerAddress",
        type: "address",
      },
    ],
    name: "getAllMockExceptLastOneAuthorised",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signerAddress",
        type: "address",
      },
    ],
    name: "getAuthorisedMockSignerIndex",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signerAddress",
        type: "address",
      },
    ],
    name: "getAuthorisedSignerIndex",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDataServiceId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUniqueSignersThreshold",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestsWith10Args",
    outputs: [
      {
        internalType: "bytes32",
        name: "arg1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg2",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg3",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg4",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg5",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg6",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg7",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg8",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg9",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg10",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "requesterAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestsWith3Args",
    outputs: [
      {
        internalType: "bytes32",
        name: "arg1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg2",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg3",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "requesterAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestsWith5Args",
    outputs: [
      {
        internalType: "bytes32",
        name: "arg1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg2",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg3",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg4",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg5",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "requesterAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "arg1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg2",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg3",
        type: "bytes32",
      },
    ],
    name: "sendRequestWith3Args",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "arg1",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg2",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg3",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg4",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "arg5",
        type: "bytes32",
      },
    ],
    name: "sendRequestWith5Args",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_deleteFromStorage",
        type: "bool",
      },
    ],
    name: "setDeleteFromStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receivedTimestampMilliseconds",
        type: "uint256",
      },
    ],
    name: "validateTimestamp",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260008080556001556002805460ff1916905534801561002257600080fd5b50611f62806100326000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063a7d0d607116100b2578063d22158fa11610081578063e9ee566411610066578063e9ee5664146103ba578063f50b2efe146104ad578063f90c4924146104c057600080fd5b8063d22158fa14610368578063e46e9d5c1461037b57600080fd5b8063a7d0d60714610281578063ae538b8214610294578063b24ebfcc14610340578063c274583a1461035357600080fd5b80634ae45907116101095780635acac63e116100ee5780635acac63e1461024857806364ee6bbb1461025b57806395262d9f1461026e57600080fd5b80634ae459071461021f57806355a547d51461024057600080fd5b80632dad44ac1461013b578063382d0a7c146101505780633ce142f5146101e7578063429989f01461020c575b600080fd5b61014e610149366004611bb3565b6104c7565b005b6101a461015e366004611bb3565b60036020819052600091825260409091208054600182015460028301549383015460049093015491939092909173ffffffffffffffffffffffffffffffffffffffff1685565b60408051958652602086019490945292840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a0015b60405180910390f35b6101fa6101f5366004611bcc565b610555565b60405160ff90911681526020016101de565b6101fa61021a366004611bcc565b610566565b61023261022d366004611c02565b610a2b565b6040519081526020016101de565b610232610aff565b610232610256366004611c3d565b610c58565b61014e610269366004611bb3565b610d10565b6101fa61027c366004611bcc565b610d8b565b61014e61028f366004611bb3565b610d96565b6102f56102a2366004611bb3565b6004602081905260009182526040909120805460018201546002830154600384015494840154600585015460069095015493959294919390919073ffffffffffffffffffffffffffffffffffffffff1687565b604080519788526020880196909652948601939093526060850191909152608084015260a083015273ffffffffffffffffffffffffffffffffffffffff1660c082015260e0016101de565b61023261034e366004611c98565b610e45565b61035b610e50565b6040516101de9190611d74565b6101fa610376366004611bcc565b610e84565b61014e610389366004611de0565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b61043e6103c8366004611bb3565b600560208190526000918252604090912080546001820154600283015460038401546004850154958501546006860154600787015460088801546009890154600a8a0154600b909a0154989a979996989597969495939492939192909173ffffffffffffffffffffffffffffffffffffffff168c565b604080519c8d5260208d019b909b52998b019890985260608a0196909652608089019490945260a088019290925260c087015260e086015261010085015261012084015261014083015273ffffffffffffffffffffffffffffffffffffffff16610160820152610180016101de565b61014e6104bb366004611bb3565b610f0a565b60036101fa565b600081815260046020526040902060018101546104e390610f4d565b60015560025460ff16156105515760008281526004602081905260408220828155600181018390556002810183905560038101839055908101829055600581019190915560060180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b5050565b600061056082610d8b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff821673f39fd6e51aad88f6f4ce6ab8827279cfffb92266036105a157506000919050565b73ffffffffffffffffffffffffffffffffffffffff82167370997970c51812dc3a010c7d01b50e0d17dc79c8036105da57506001919050565b73ffffffffffffffffffffffffffffffffffffffff8216733c44cdddb6a900fa2b585dd299e03d12fa4293bc0361061357506002919050565b73ffffffffffffffffffffffffffffffffffffffff82167390f79bf6eb2c4f870365e785982e1f101e93b9060361064c57506003919050565b73ffffffffffffffffffffffffffffffffffffffff82167315d34aaf54267db7d7c367839aaf71a00a2c6a650361068557506004919050565b73ffffffffffffffffffffffffffffffffffffffff8216739965507d1a55bcc2695c58ba16fb37d819b0a4dc036106be57506005919050565b73ffffffffffffffffffffffffffffffffffffffff821673976ea74026e726554db657fa54763abd0c3a0aa9036106f757506006919050565b73ffffffffffffffffffffffffffffffffffffffff82167314dc79964da2c08b23698b3d3cc7ca32193d99550361073057506007919050565b73ffffffffffffffffffffffffffffffffffffffff82167323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f0361076957506008919050565b73ffffffffffffffffffffffffffffffffffffffff821673a0ee7a142d267c1f36714e4a8f75612f20a79720036107a257506009919050565b73ffffffffffffffffffffffffffffffffffffffff821673bcd4042de499d14e55001ccbb24a551f3b954096036107db5750600a919050565b73ffffffffffffffffffffffffffffffffffffffff82167371be63f3384f5fb98995898a86b02fb2426c5788036108145750600b919050565b73ffffffffffffffffffffffffffffffffffffffff821673fabb0ac9d68b0b445fb7357272ff202c5651694a0361084d5750600c919050565b73ffffffffffffffffffffffffffffffffffffffff8216731cbd3b2770909d4e10f157cabc84c7264073c9ec036108865750600d919050565b73ffffffffffffffffffffffffffffffffffffffff821673df3e18d64bc6a983f673ab319ccae4f1a57c7097036108bf5750600e919050565b73ffffffffffffffffffffffffffffffffffffffff821673cd3b766ccdd6ae721141f452c550ca635964ce71036108f85750600f919050565b73ffffffffffffffffffffffffffffffffffffffff8216732546bcd3c84621e976d8185a91a922ae77ecec300361093157506010919050565b73ffffffffffffffffffffffffffffffffffffffff821673bda5747bfd65f08deb54cb465eb87d40e51b197e0361096a57506011919050565b73ffffffffffffffffffffffffffffffffffffffff821673dd2fd4581271e230360230f9337d5c0430bf44c0036109a357506012919050565b73ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c1199036109dc57506013919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b600080548180610a3a83611e31565b90915550506040805160e081018252968752602080880196875287820195865260608801948552608088019384524360a089019081523360c08a0190815260008054815260049384905293842099518a55975160018a0155955160028901559351600388015591519286019290925591516005850155509051600690920180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909316929092179091555490565b600080610b0a610fbd565b90506000610b17826110f2565b925061ffff1690506000819003610b5a576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610c52576000610b708461115a565b9050600080610b80606887611e69565b90506000610b8e8236611e7c565b9050803592508265ffffffffffff16600003610bd6576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87600003610bee578265ffffffffffff169750610c2f565b878365ffffffffffff1614610c2f576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c398488611e69565b9650505050508080610c4a90611e31565b915050610b5d565b50505090565b600080548180610c6783611e31565b90915550506040805160a081018252948552602080860194855285820193845243606087019081523360808801908152600080548152600393849052938420975188559551600188015593516002870155925192850192909255509051600490920180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909316929092179091555490565b60008181526003602052604090208054610d2990610f4d565b60015560025460ff161561055157506000908152600360208190526040822082815560018101839055600281018390559081019190915560040180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600061056082610e84565b60008181526005602052604090206002810154610db290610f4d565b60015560025460ff16156105515750600090815260056020819052604082208281556001810183905560028101839055600381018390556004810183905590810182905560068101829055600781018290556008810182905560098101829055600a810191909155600b0180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600061056082611196565b60606040517f608b530700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216738626f6940e2eb28930efb4cef49b2d1f2c9c119903610f01576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610a22565b61056082610566565b6501812f2590c0811015610f4a576040517f355b874300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110610f8657610f86611e8f565b602002602001018181525050610f9b816111a1565b600081518110610fad57610fad611e8f565b6020026020010151915050919050565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480611025576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115611062576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd73601356000600961109b600362ffffff8516611e69565b6110a59190611e69565b9050366110b3600283611e69565b11156110eb576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b60008080611101602085611e69565b90503681111561113d576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3681900335925082611150600286611e69565b9250925050915091565b6000806000611168846111c3565b9092509050604e61117a826020611e69565b6111849084611ebe565b61118e9190611e69565b949350505050565b600061056082611216565b60606000806111af84611343565b915091506111bc81610f0a565b5092915050565b60008080808060206111d6604188611e69565b6111e09190611e69565b6111ea9036611e7c565b8035935090506111fb600382611e7c565b62ffffff9390931696923563ffffffff169550919350505050565b6000815160020361126d5760028260018151811061123657611236611e8f565b60200260200101518360008151811061125157611251611e8f565b60200260200101516112639190611e69565b6105609190611f04565b81516000036112a8576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112b182611590565b6000600283516112c19190611f04565b9050600283516112d19190611f18565b6000036113315760008382815181106112ec576112ec611e8f565b6020026020010151846001846113029190611e7c565b8151811061131257611312611e8f565b60200260200101516113249190611e69565b905061118e600282611f04565b828181518110610fad57610fad611e8f565b6060600080835167ffffffffffffffff81111561136257611362611c69565b60405190808252806020026020018201604052801561138b578160200160208202803683370190505b5090506000845167ffffffffffffffff8111156113aa576113aa611c69565b6040519080825280602002602001820160405280156113d3578160200160208202803683370190505b5090506000855167ffffffffffffffff8111156113f2576113f2611c69565b60405190808252806020026020018201604052801561142557816020015b60608152602001906001900390816114105790505b509050600360005b875181101561149e578167ffffffffffffffff81111561144f5761144f611c69565b604051908082528060200260200182016040528015611478578160200160208202803683370190505b5083828151811061148b5761148b611e8f565b602090810291909101015260010161142d565b5060006114a9610fbd565b905060006114b6826110f2565b60405190935061ffff909116915060005b828110156115775760006114de8c8a8a8a896115de565b9095509050600081900361151e576040517fdfb25a7900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b898114611567578960000361153557809950611567565b6040517f4cbc474200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50602082016040526001016114c7565b506115828588611887565b985050505050505050915091565b8051602082016020820281019150805b828110156115d857815b818110156115cf5781518151808210156115c5578084528183525b50506020016115aa565b506020016115a0565b50505050565b60008060008060006115ef866111c3565b909250905060008060608180600d611608602088611e69565b6116129089611ebe565b61161c9190611e69565b9150600061162b60688d611e69565b6116359036611e7c565b905060008361164560418f611e69565b61164f9190611e69565b6116599036611e7c565b90506116658482611678565b94508360208601209550813592506116ba565b604080518381526020818501810190925260009101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b8265ffffffffffff169a506116db8660418f6116d69190611e69565b6119af565b96506116e687610555565b60ff16995050505050505050604e866116ff9190611e69565b955060008060005b8481101561187457602061171b858b611e69565b6117259190611e69565b98506117318985611b47565b909350915060005b8d5181101561186b578d818151811061175457611754611e8f565b602002602001015184036118635760008c828151811061177657611776611e8f565b6020026020010151905061178f81896001901b16151590565b1580156117b85750600360ff168e83815181106117ae576117ae611e8f565b6020026020010151105b1561185d57838c83815181106117d0576117d0611e8f565b60200260200101518f84815181106117ea576117ea611e8f565b60200260200101518151811061180257611802611e8f565b6020026020010181815250508d828151811061182057611820611e8f565b60200260200101805180919061183590611e31565b9052506001881b81178d838151811061185057611850611e8f565b6020026020010181815250505b5061186b565b600101611739565b50600101611707565b5050508594505050509550959350505050565b60606000835167ffffffffffffffff8111156118a5576118a5611c69565b6040519080825280602002602001820160405280156118ce578160200160208202803683370190505b509050600360005b85518110156119a557818582815181106118f2576118f2611e8f565b602002602001015110156119585784818151811061191257611912611e8f565b6020026020010151826040517f2b13aef5000000000000000000000000000000000000000000000000000000008152600401610a22929190918252602082015260400190565b600061197c87838151811061196f5761196f611e8f565b6020026020010151610e45565b90508084838151811061199157611991611e8f565b6020908102919091010152506001016118d6565b5090949350505050565b60003682900380359060208101359060400135831a601b81148015906119d9575060ff8116601c14155b15611a13576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610a22565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115611a70576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610a22565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611ac3573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015194505073ffffffffffffffffffffffffffffffffffffffff8416611b3e576040517f666b7cba00000000000000000000000000000000000000000000000000000000815260048101879052602401610a22565b50505092915050565b60008080611b558536611e7c565b9050803592506020810135915060218410611b9f576040517fc000fc4200000000000000000000000000000000000000000000000000000000815260048101859052602401610a22565b8360200360080282901c9150509250929050565b600060208284031215611bc557600080fd5b5035919050565b600060208284031215611bde57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146110eb57600080fd5b600080600080600060a08688031215611c1a57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080600060608486031215611c5257600080fd5b505081359360208301359350604090920135919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020808385031215611cab57600080fd5b823567ffffffffffffffff80821115611cc357600080fd5b818501915085601f830112611cd757600080fd5b813581811115611ce957611ce9611c69565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715611d2c57611d2c611c69565b604052918252848201925083810185019188831115611d4a57600080fd5b938501935b82851015611d6857843584529385019392850192611d4f565b98975050505050505050565b600060208083528351808285015260005b81811015611da157858101830151858201604001528201611d85565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600060208284031215611df257600080fd5b813580151581146110eb57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e6257611e62611e02565b5060010190565b8082018082111561056057610560611e02565b8181038181111561056057610560611e02565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b808202811582820484141761056057610560611e02565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082611f1357611f13611ed5565b500490565b600082611f2757611f27611ed5565b50069056fea264697066735822122072b559b4d8a472cdea4b7a952839f9b4e9d08fe4d417f8eac1ce3fc8219f91aa64736f6c63430008110033";

type StorageStructureModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageStructureModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StorageStructureModel__factory extends ContractFactory {
  constructor(...args: StorageStructureModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StorageStructureModel> {
    return super.deploy(overrides || {}) as Promise<StorageStructureModel>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StorageStructureModel {
    return super.attach(address) as StorageStructureModel;
  }
  override connect(signer: Signer): StorageStructureModel__factory {
    return super.connect(signer) as StorageStructureModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageStructureModelInterface {
    return new utils.Interface(_abi) as StorageStructureModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StorageStructureModel {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StorageStructureModel;
  }
}
