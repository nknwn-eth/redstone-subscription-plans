/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SampleBitmapLib,
  SampleBitmapLibInterface,
} from "../../../contracts/samples/SampleBitmapLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bitmap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bitIndex",
        type: "uint256",
      },
    ],
    name: "getBitFromBitmap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bitmap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bitIndex",
        type: "uint256",
      },
    ],
    name: "setBitInBitmap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060ec8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80635aace7df1460375780637160c362146059575b600080fd5b604660423660046095565b6077565b6040519081526020015b60405180910390f35b606860643660046095565b6087565b60405190151581526020016050565b60006001821b83175b9392505050565b60006001821b831615156080565b6000806040838503121560a757600080fd5b5050803592602090910135915056fea26469706673582212200b709016a9013b0aaa7103a980a51ec26a1791bc3d9a7987e15eb0ee0c2b4fef64736f6c63430008110033";

type SampleBitmapLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleBitmapLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleBitmapLib__factory extends ContractFactory {
  constructor(...args: SampleBitmapLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SampleBitmapLib> {
    return super.deploy(overrides || {}) as Promise<SampleBitmapLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SampleBitmapLib {
    return super.attach(address) as SampleBitmapLib;
  }
  override connect(signer: Signer): SampleBitmapLib__factory {
    return super.connect(signer) as SampleBitmapLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleBitmapLibInterface {
    return new utils.Interface(_abi) as SampleBitmapLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SampleBitmapLib {
    return new Contract(address, _abi, signerOrProvider) as SampleBitmapLib;
  }
}
