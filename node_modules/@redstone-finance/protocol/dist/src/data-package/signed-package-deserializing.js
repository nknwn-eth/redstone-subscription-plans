"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializeSignedPackage = deserializeSignedPackage;
exports.recoverSignerPublicKey = recoverSignerPublicKey;
exports.recoverSignerAddress = recoverSignerAddress;
exports.recoverDeserializedSignerAddress = recoverDeserializedSignerAddress;
const utils_1 = require("ethers/lib/utils");
const UniversalSigner_1 = require("../UniversalSigner");
const DataPackage_1 = require("./DataPackage");
function deserializeSignedPackage(plainObject) {
    const signatureBase64 = plainObject.signature;
    if (!signatureBase64) {
        throw new Error("Signature can not be empty");
    }
    const signatureBytes = utils_1.base64.decode(signatureBase64);
    const parsedSignature = (0, utils_1.splitSignature)(signatureBytes);
    const { signature: _, ...unsignedDataPackagePlainObj } = plainObject;
    const unsignedDataPackage = DataPackage_1.DataPackage.fromObj(unsignedDataPackagePlainObj);
    return { signature: parsedSignature, dataPackage: unsignedDataPackage };
}
function recoverSignerPublicKey(object) {
    return UniversalSigner_1.UniversalSigner.recoverPublicKey(object.dataPackage.getSignableHash(), object.signature);
}
function recoverSignerAddress(object) {
    const signerPublicKeyBytes = recoverSignerPublicKey(object);
    return (0, utils_1.computeAddress)(signerPublicKeyBytes);
}
function recoverDeserializedSignerAddress(plainObj) {
    return recoverSignerAddress(deserializeSignedPackage(plainObj));
}
//# sourceMappingURL=signed-package-deserializing.js.map