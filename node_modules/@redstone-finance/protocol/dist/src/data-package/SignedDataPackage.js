"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignedDataPackage = void 0;
const utils_1 = require("ethers/lib/utils");
const Serializable_1 = require("../common/Serializable");
const signed_package_deserializing_1 = require("./signed-package-deserializing");
class SignedDataPackage extends Serializable_1.Serializable {
    dataPackage;
    signature;
    constructor(dataPackage, signature) {
        super();
        this.dataPackage = dataPackage;
        if (typeof signature === "string") {
            this.signature = (0, utils_1.splitSignature)(signature);
        }
        else {
            this.signature = signature;
        }
    }
    serializeSignatureToBytes() {
        return (0, utils_1.arrayify)(this.serializeSignatureToHex());
    }
    serializeSignatureToHex() {
        return (0, utils_1.joinSignature)(this.signature);
    }
    recoverSignerPublicKey() {
        return (0, signed_package_deserializing_1.recoverSignerPublicKey)(this);
    }
    recoverSignerAddress() {
        return (0, signed_package_deserializing_1.recoverSignerAddress)(this);
    }
    toBytes() {
        return (0, utils_1.concat)([
            this.dataPackage.toBytes(),
            this.serializeSignatureToBytes(),
        ]);
    }
    toObj() {
        const signatureHex = this.serializeSignatureToHex();
        return {
            ...this.dataPackage.toObj(),
            signature: utils_1.base64.encode(signatureHex),
        };
    }
    static fromObj(plainObject) {
        return SignedDataPackage.fromObjLikeThis((0, signed_package_deserializing_1.deserializeSignedPackage)(plainObject));
    }
    static fromObjLikeThis(object) {
        return new SignedDataPackage(object.dataPackage, object.signature);
    }
}
exports.SignedDataPackage = SignedDataPackage;
//# sourceMappingURL=SignedDataPackage.js.map