import { BytesLike } from "ethers/lib/utils";
export type NumberLike = number | string;
export type ConvertibleToBytes32 = string;
export declare const assert: (condition: boolean, errMsg?: string) => void;
export declare const convertStringToBytes32: (str: string) => Uint8Array;
export declare const convertNumberToBytes: (value: NumberLike, decimals: number, byteSize: number) => Uint8Array;
export declare const convertNumberToString: (value: NumberLike, decimals: number) => string;
export declare const convertIntegerNumberToBytes: (value: NumberLike, byteSize: number) => Uint8Array;
export declare const convertBytesToNumber: (bytes: Uint8Array) => number;
export declare const hexlifyWithout0xPrefix: (value: BytesLike) => string;
export declare function useDefaultIfUndefined<T>(value: T | undefined, defaultValue: T): T;
export declare const concat: (items: Uint8Array[]) => Uint8Array;
//# sourceMappingURL=utils.d.ts.map