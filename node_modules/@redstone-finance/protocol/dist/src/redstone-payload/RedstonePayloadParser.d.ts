import { SignedDataPackage } from "../data-package/SignedDataPackage";
import { DataPoint } from "../data-point/DataPoint";
import { NumericDataPoint } from "../data-point/NumericDataPoint";
export interface RedstonePayloadParsingResult {
    signedDataPackages: SignedDataPackage[];
    unsignedMetadata: Uint8Array;
    remainderPrefix: Uint8Array;
}
export declare class RedstonePayloadParser {
    private readonly bytesData;
    constructor(bytesData: Uint8Array);
    parse(): RedstonePayloadParsingResult;
    extractUnsignedMetadata(): Uint8Array;
    assertValidRedstoneMarker(): void;
    extractSignedDataPackage(initialNegativeOffset: number): SignedDataPackage;
    private static createDataPoint;
    private extractNumber;
    private slice;
}
export declare const convertDataPointToNumericDataPoint: (dataPoint: DataPoint, decimals?: number) => NumericDataPoint;
//# sourceMappingURL=RedstonePayloadParser.d.ts.map