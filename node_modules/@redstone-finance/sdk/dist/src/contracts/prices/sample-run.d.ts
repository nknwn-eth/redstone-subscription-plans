import { BigNumberish } from "ethers";
import { ContractData } from "../ContractData";
import { ContractParamsProvider } from "../ContractParamsProvider";
import { IContractConnector } from "../IContractConnector";
import { IPriceFeedContractAdapter } from "./IPriceFeedContractAdapter";
import { IExtendedPricesContractAdapter, IMultiFeedPricesContractAdapter, IPricesContractAdapter } from "./IPricesContractAdapter";
export declare function sampleRun(paramsProvider: ContractParamsProvider, pricesConnector: IContractConnector<IPricesContractAdapter>, ethFeedConnector?: IContractConnector<IPriceFeedContractAdapter>, refreshStateCallback?: () => Promise<void>): Promise<void>;
export declare function convertValue(v: BigNumberish): number;
export declare function describeTimestamp(timestamp: number): string;
export declare function describeContractData(data: ContractData): string;
export declare function isExtendedPricesContractAdapter(priceAdapter: IPricesContractAdapter): priceAdapter is IExtendedPricesContractAdapter;
export declare function isMultiFeedContractAdapter(priceAdapter: IPricesContractAdapter): priceAdapter is IMultiFeedPricesContractAdapter;
//# sourceMappingURL=sample-run.d.ts.map