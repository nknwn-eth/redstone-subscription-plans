import { ContractData } from "../ContractData";
import { ContractParamsProvider } from "../ContractParamsProvider";
export interface IPricesContractAdapter {
    getPricesFromPayload(paramsProvider: ContractParamsProvider): Promise<bigint[]>;
    writePricesFromPayloadToContract(paramsProvider: ContractParamsProvider): Promise<string | bigint[]>;
    readPricesFromContract(paramsProvider: ContractParamsProvider, blockNumber?: number): Promise<bigint[]>;
    readTimestampFromContract(feedId?: string, blockNumber?: number): Promise<number>;
}
export interface IExtendedPricesContractAdapter extends IPricesContractAdapter {
    getUniqueSignerThreshold(blockNumber?: number): Promise<number>;
    readLatestUpdateBlockTimestamp(feedId?: string, blockNumber?: number): Promise<number | undefined>;
    getSignerAddress(): Promise<string | undefined>;
}
export interface IMultiFeedPricesContractAdapter extends IExtendedPricesContractAdapter {
    readContractData(feedIds: string[], blockNumber?: number): Promise<ContractData>;
}
//# sourceMappingURL=IPricesContractAdapter.d.ts.map