export type FsPartialInterface = {
    readFileSync: (path: string) => Buffer;
    readdirSync: (path: string) => string[];
};
export type PathInterface<ParsedPath, FormatInputPathObject, PlatformPath> = {
    normalize: (path: string) => string;
    join: (...paths: string[]) => string;
    resolve: (...paths: string[]) => string;
    isAbsolute: (path: string) => boolean;
    relative: (from: string, to: string) => string;
    dirname: (path: string) => string;
    basename: (path: string, suffix?: string) => string;
    extname: (path: string) => string;
    readonly sep: "\\" | "/";
    readonly delimiter: ";" | ":";
    parse: (path: string) => ParsedPath;
    format: (pathObject: FormatInputPathObject) => string;
    toNamespacedPath: (path: string) => string;
    readonly posix: PlatformPath;
    readonly win32: PlatformPath;
};
export declare let path: PathInterface<unknown, unknown, unknown>;
export declare let fs: FsPartialInterface;
//# sourceMappingURL=fs-path-safe.d.ts.map