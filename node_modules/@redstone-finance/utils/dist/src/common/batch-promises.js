"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.batchPromises = batchPromises;
const errors_1 = require("./errors");
const time_1 = require("./time");
async function batchPromises(batchSize, msBetweenBatches, promises, failOnError = false) {
    const results = [];
    const errors = [];
    for (let i = 0; i < promises.length; i += batchSize) {
        if (i !== 0) {
            await (0, time_1.sleep)(msBetweenBatches);
        }
        const batch = promises.slice(i, i + batchSize);
        const batchResults = await Promise.allSettled(batch.map((f) => f()));
        const filteredResults = batchResults.filter((result) => result.status === "fulfilled");
        results.push(...filteredResults.map((result) => result.value));
        const filteredErrors = batchResults.filter((result) => result.status === "rejected");
        errors.push(...filteredErrors.map((r) => r.reason));
    }
    return (0, errors_1.assertThenReturnOrFail)(results, errors, "batch operation failed", failOnError);
}
//# sourceMappingURL=batch-promises.js.map