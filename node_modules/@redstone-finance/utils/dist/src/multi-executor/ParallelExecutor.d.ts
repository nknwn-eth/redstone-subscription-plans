import { Executor } from "./Executor";
import { FnBox } from "./FnBox";
export declare abstract class ParallelExecutor<R> extends Executor<R> {
    protected timeoutMs?: number | undefined;
    protected constructor(timeoutMs?: number | undefined);
    protected static getModes<R>(results: R[]): {
        item: R;
        count: number;
    }[] | undefined;
    protected abstract verifySettlements(successfulResults: R[], errorResults: unknown[], totalLength: number): boolean;
    protected abstract aggregate(results: R[]): R;
    execute(functions: FnBox<R>[]): Promise<R>;
    private handleResults;
}
//# sourceMappingURL=ParallelExecutor.d.ts.map